<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[若愚谷]]></title>
  <subtitle><![CDATA[狗窝]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://shengruoyu.github.io/"/>
  <updated>2015-12-27T18:54:31.426Z</updated>
  <id>http://shengruoyu.github.io/</id>
  
  <author>
    <name><![CDATA[Ruoyu Sheng]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Ubuntu服务器架设shadowsocks代理并同时监听IPV4/6]]></title>
    <link href="http://shengruoyu.github.io/2015/12/28/shadowsocks/"/>
    <id>http://shengruoyu.github.io/2015/12/28/shadowsocks/</id>
    <published>2015-12-27T18:54:31.426Z</published>
    <updated>2015-12-27T18:54:31.426Z</updated>
    <content type="html"><![CDATA[<p>最近Bandwagonhost的VPS快要到期了，于是打算代理服务器转移至Vultr，在转移过程中解决了一个困扰已久的同时监听IPV4/6的问题。</p>
<p>其实在VPS上搭建shadowsocks是非常简易方便的，像博主这样的小白按照步骤一步一步走下来也能够成功搭建并开启。由于博主平常使用Ubuntu的机会比较多，因此此篇文章是为基于Ubuntu系统的VPS而写，对于CentOS系统的VPS其实步骤也差不多，只是有些命令上可能稍微有些出入。现在，我就把在Ubuntu搭建Shadowsocks的步骤娓娓道来：</p>
<h3 id="u5207_u6362_u81F3root_u8D26_u6237"><a href="#u5207_u6362_u81F3root_u8D26_u6237" class="headerlink" title="切换至root账户"></a>切换至root账户</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">su</span></span><br></pre></td></tr></table></figure>
<h3 id="u5B89_u88C5python-pip_u548Cshadowsocks"><a href="#u5B89_u88C5python-pip_u548Cshadowsocks" class="headerlink" title="安装python-pip和shadowsocks"></a>安装python-pip和shadowsocks</h3><p>执行如下命令：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get <span class="operator"><span class="keyword">update</span></span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">upgrade</span></span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">install</span> python-pip</span><br><span class="line">pip <span class="keyword">install</span> shadowsocks</span></span><br></pre></td></tr></table></figure>
<h3 id="u65B0_u5EFA_u5E76_u7F16_u8F91shadowsocks_u914D_u7F6E_u6587_u4EF6"><a href="#u65B0_u5EFA_u5E76_u7F16_u8F91shadowsocks_u914D_u7F6E_u6587_u4EF6" class="headerlink" title="新建并编辑shadowsocks配置文件"></a>新建并编辑shadowsocks配置文件</h3><p>由于博主想同时监听IPV4/6，但是按照网上提供的各种版本方法都未成功，只能选择新建两个配置文件并开启两个后台进程的下策。在任意路径下新建两个文件，分别命名为shadowsocksv4.json和shadowsocksv6.json。分别向两个文件写入如下内容：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#shadowsocksv4.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>:<span class="string">"0.0.0.0"</span>,      <span class="preprocessor"># 服务器IP</span></span><br><span class="line">    <span class="string">"server_port"</span>:<span class="number">98765</span>,     <span class="preprocessor"># ss服务器所使用的端口号，建议改到<span class="number">30000</span>-<span class="number">60000</span></span></span><br><span class="line">    <span class="string">"password"</span>:<span class="string">"password"</span>,   <span class="preprocessor"># ss服务器密码，轻易不要分享</span></span><br><span class="line">    <span class="string">"timeout"</span>:<span class="number">300</span>,           <span class="preprocessor"># 超时时间</span></span><br><span class="line">    <span class="string">"method"</span>:<span class="string">"aes-256-cfb"</span>   <span class="preprocessor"># 加密方式，需要和客户端配合设置</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#shadowsocksv6.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>:<span class="string">"::"</span>,           <span class="preprocessor"># 服务器IP</span></span><br><span class="line">    <span class="string">"server_port"</span>:<span class="number">98765</span>,     <span class="preprocessor"># ss服务器所使用的端口号，建议改到<span class="number">30000</span>-<span class="number">60000</span></span></span><br><span class="line">    <span class="string">"password"</span>:<span class="string">"password"</span>,   <span class="preprocessor"># ss服务器密码，轻易不要分享</span></span><br><span class="line">    <span class="string">"timeout"</span>:<span class="number">300</span>,           <span class="preprocessor"># 超时时间</span></span><br><span class="line">    <span class="string">"method"</span>:<span class="string">"aes-256-cfb"</span>   <span class="preprocessor"># 加密方式，需要和客户端配合设置</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="u5F00_u542Fshadowsocks_u540E_u53F0_u53CC_u8FDB_u7A0B"><a href="#u5F00_u542Fshadowsocks_u540E_u53F0_u53CC_u8FDB_u7A0B" class="headerlink" title="开启shadowsocks后台双进程"></a>开启shadowsocks后台双进程</h3><p>在终端执行如下命令：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c shadowsocksv4.json -d <span class="operator"><span class="keyword">start</span> <span class="comment">--pid-file ssv4.pid</span></span><br><span class="line">ssserver -<span class="keyword">c</span> shadowsocksv6.<span class="keyword">json</span> -<span class="keyword">d</span> <span class="keyword">start</span> <span class="comment">--pid-file ssv6.pid</span></span></span><br></pre></td></tr></table></figure>
<p>至此，shadowsocks代理已成功搭建并开启，欢迎享受自由的互联网！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近Bandwagonhost的VPS快要到期了，于是打算代理服务器转移至Vultr，在转移过程中解决了一个困扰已久的同时监听IPV4/6的问题。</p>
<p>其实在VPS上搭建shadowsocks是非常简易方便的，像博主这样的小白按照步骤一步一步走下来也能够成功搭建并]]>
    </summary>
    
      <category term="gfw" scheme="http://shengruoyu.github.io/tags/gfw/"/>
    
      <category term="shadowsocks" scheme="http://shengruoyu.github.io/tags/shadowsocks/"/>
    
      <category term="ubuntu" scheme="http://shengruoyu.github.io/tags/ubuntu/"/>
    
      <category term="vps" scheme="http://shengruoyu.github.io/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我是难民]]></title>
    <link href="http://shengruoyu.github.io/2015/12/28/wic/"/>
    <id>http://shengruoyu.github.io/2015/12/28/wic/</id>
    <published>2015-12-27T17:06:18.449Z</published>
    <updated>2015-12-27T17:06:18.446Z</updated>
    <content type="html"><![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/72213-72f12d0addd5660c.jpg" alt=""></p>
<p>最近几天<del>局域网</del>互联网界最受关注的事情莫过于在乌镇召开的世界互联网大会。这是中国召开的第二节世界互联网大会。虽说这次大会被冠以了互联网和世界的名号，可是大家都知道兲朝拥有全世界规模最大的局域网，而与会的嘉宾也大多来自从来没有听说过名字的某些国家。有网友不禁感叹，对这次大会的关注实在让自己的地理知识提升了不只一个档次。</p>
<p>这次大会的主旨从一开始就是非常鲜明的：互联网主权。“互联网主权”并不是一个新鲜词汇，早在2010年官方就曾经发表白皮书，强调互联网主权的概念，并把“互联网主权”纳入“国家主权”的范畴。此后，官方媒体又不断对此概念进行多次强化宣传。其实，去年召开的第一届世界互联网大会的目的，也是希望与会各方能够在“互联网主权”问题上达成一致，只不过最后并未能成功。</p>
<p>提到“互联网主权”这个概念，就不得不说中国互联网的现状。中国拥有全世界规模最大的网民团体，也有着全世界规模最大的市场；同时却也有着全世界规模最大的网络防火墙和审查系统（以及无处不在的自我审查）。虽然如此，官方却常以巨大的网民数量、网站数量等标榜中国的互联网是开放的、自由的、有序的。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/72213-b93846f7b4109fb3.jpg" alt=""></p>
<p>在一个信息自由流通的年代，中国一批攻城狮响应号召，在至今还未被病魔战胜的方校长的带领下，建立起了全世界独一无二的超大规模的网络防火墙，并成功将这一项领先全宇宙的技术推广至伊朗、赞比亚等国。这一防火墙可以阻挡网民自由访问互联网，将官方不喜欢的消息过滤掉。诸如Google、Facebook、Twitter、Wikipedia等世界知名网站在国内都无法正常访问。</p>
<p>网络防火墙的存在，将国内互联网与国际互联网隔绝，形成了国内有别于世界其他国家的互联网形态。任何一个全世界人民共享的优秀互联网产品，你总能在中国找到替代（山寨）品。这些替代品在这堵墙的保护下，免于与国际厂商竞争，靠着中国庞大的互联网市场，形成了以BAT为代表的一系列互联网流氓巨头。这些巨头在不同领域统治着中国的互联网界，搜索归百度，电商归阿里，社交归腾讯，安全归360。国内网民很少能够逃离这四家的魔爪。</p>
<p>这堵墙是这几家巨头的财富保障，至少能够让他们在中国市场免于与国际巨头进行厮杀，专注于国内市场的竞争。考虑到此，也不难奇怪这几家厂商对于这堵墙的感情，也不奇怪马云在闭幕式上所说：这个国家管出了七亿互联网用户，管出了BAT，管出了无数的创新，还是有很多东西值得我们学习和反思的。在网络上，也有无数人以此为这堵墙洗地，认为它对于保护中国的互联网民族企业起到了莫大的作用。</p>
<p>可是，你们忘记了这堵墙的初衷么？这些互联网企业的崛起，不过是意料之外（或者意料之中）的副产品而已。它最初的目的是为了阻碍信息的自由流通，便于控制信息的传播。虽然中国的互联网企业一个个崛起，可是普罗大众最基本的权利却被忽视了：自由地使用互联网。这些靠着中国网民（被迫）牺牲自己权利而发展壮大起来的企业，并没有任何一家为他们奔走疾呼。</p>
<p>虽说这堵墙造就了这些巨头，不过也在一定程度上吞噬着他们。因为缺乏与国际厂商的竞争，国内互联网企业在很多方面落后于国际大厂，而国内市场肆无忌惮的恶意竞争也让各家的产品越发流氓。HTTPS未能大规模普及、Flash至今依然活跃、XCodeGhost风波等一系列问题都可以说是这种封闭带来的恶果。至于各家如何流氓我在以往的文章中已经提到过了，在此不再赘述。</p>
<p>封闭还让兲朝互联网充斥着各种垃圾信息。有过科研经历的人都可以理解Google与英文对科研人员的重要性，而整个中文互联网就像一片没有知识的荒野，连号称“高质量中文社区”的知乎也被垃圾信息吞噬。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/72213-71d7f627d4ee694b.png" alt=""></p>
<p>说完了防火墙，就该说一说审查这个事了。在兲朝，审查并不是互联网独有的，一切和思想表达相关的东西，诸如：书籍、影视、歌曲等，都受到相关部门的审查。但是，互联网作为一个实时性超强、互动性超强、受众超广的平台，对其审查有着异于其他作品的力度。就在几年前，天津市强力打造的金融中心，却阴差阳错了成为了中国互联网审查中心，各互联网企业的审查部门都聚居于此。</p>
<p>其实审查这个事情在各国都是普遍存在的，只是这这里情况更为特殊：因为这里的审查找不到严格的法律依旧，全屏一纸文件，甚至一个电话。因此，很多时候根本无法判断某些信息是否触及了审查底线。当不小心触及了审查底线的时候，随之而来的就是诸如河蟹、喝茶等一系列事件。长时间的无明确标准的审查环境，导致了很多网民在网络发言的时候养成了一种自我审查的习惯：在网络发表言论的时候，先自己审查自己的言论有没有可能触及审查底线，以避免被河蟹。这也导致兲朝互联网出现了一个很奇特的现象：敏感瓷。</p>
<p>虽然审查并没有严格的标准，但是还是有一定的规律可循，比如涉及政治、色情之类的言论就很有极大可能触及审查底线。而每个网站也都为了方便审查建立了庞大的敏感瓷库，通过机器加人工过滤到含有敏感瓷的信息。基于此，很多网友为了避免自己的信息被过滤，发明了很多说法方法。比如，拆字，把“维护和谐 拒绝低俗”拆解为“纟隹扌户禾口讠皆 扌巨纟色亻氐亻谷”；比如，借代，不用说大家都知道太祖是谁，长者是谁。当然，这种混乱的审查制度也闹出了很多笑话，比如“二十四口交换机”因为“口交”二字被当作敏感瓷对待，这种例子简直不胜枚举。</p>
<p>以上所描述的中国互联网现状其实可以用两个词来描述：封闭与管制。而这正是“主权”的特征。官方一再强调“互联网主权”的概念就是想合理化中国互联网的这种状态，在信息能够自由流通的互联网上划清国界。如果互联网主权的概念一旦在国内被以立法的形式确立，那么翻墙就会变成了一种偷渡行为，而一大批靠着各种梯子混迹在国外网站的网友都成了特殊意义上的难民。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/72213-72f12d0addd5660c.jpg" alt=""></p>
<p>最近几天<del>局域网</del>互联网界最受关注的事情莫过于在乌镇召开的世界互联网大会。]]>
    </summary>
    
      <category term="gfw" scheme="http://shengruoyu.github.io/tags/gfw/"/>
    
      <category term="internet" scheme="http://shengruoyu.github.io/tags/internet/"/>
    
      <category term="wic" scheme="http://shengruoyu.github.io/tags/wic/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[远程桌面连接Windows Server]]></title>
    <link href="http://shengruoyu.github.io/2015/12/28/windows_server/"/>
    <id>http://shengruoyu.github.io/2015/12/28/windows_server/</id>
    <published>2015-12-27T16:57:01.220Z</published>
    <updated>2015-12-27T16:57:01.220Z</updated>
    <content type="html"><![CDATA[<p>实验室工作站Windows Server已安装完毕，通过Windows远程桌面方式访问方法如下：</p>
<p>1 打开开始菜单，搜索<strong>远程桌面连接</strong>或者<strong>Remote Desktop Connection</strong>。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20151226141323.png" alt=""></p>
<p>2 打开远程桌面连接，在计算机输入框中输入工作站ip。并点击左下角“<strong>选项</strong>”。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20151226141537.png" alt=""></p>
<p>如果需要和工作站之间进行文件传输，请打开<strong>本地资源</strong>标签，选择<strong>本地设备和资源</strong>下的<strong>详细信息</strong>按钮，勾选本地磁盘驱动器。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20151226143016.png" alt=""></p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20151226143030.png" alt=""></p>
<p>3 选择<strong>连接设置</strong>中的<strong>另存为</strong>，将远程桌面连接命名并保存至桌面。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20151226141627.png" alt=""></p>
<p>4 双击桌面上已保存的rdp，并勾选<strong>不要再次询问</strong>。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20151226141703.png" alt=""></p>
<p>5 输入用户名（Administrator）和密码，并选择<strong>保存凭据</strong>，连接成功。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20151226142742.png" alt=""></p>
<p><strong>请各位登陆到服务器后，新建个人账户，以后远程登陆的时候不要使用Administrator账户，使用个人账户登录！！！</strong></p>
<p>移动客户端请点击如下链接下载：</p>
<p><a href="https://itunes.apple.com/us/app/microsoft-remote-desktop/id714464092" target="_blank" rel="external">iOS</a><br><a href="https://play.google.com/store/apps/details?id=com.microsoft.rdc.android" target="_blank" rel="external">Android</a><br><a href="https://www.microsoft.com/en-us/store/apps/remote-desktop/9wzdncrfj3ps" target="_blank" rel="external">Windows Phone</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>实验室工作站Windows Server已安装完毕，通过Windows远程桌面方式访问方法如下：</p>
<p>1 打开开始菜单，搜索<strong>远程桌面连接</strong>或者<strong>Remote Desktop Connection</strong>。</]]>
    </summary>
    
      <category term="remote_desktop" scheme="http://shengruoyu.github.io/tags/remote-desktop/"/>
    
      <category term="windows_server" scheme="http://shengruoyu.github.io/tags/windows-server/"/>
    
      <category term="workstation" scheme="http://shengruoyu.github.io/tags/workstation/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[毛蛋]]></title>
    <link href="http://shengruoyu.github.io/2015/12/28/Mao_Tse-tung/"/>
    <id>http://shengruoyu.github.io/2015/12/28/Mao_Tse-tung/</id>
    <published>2015-12-27T16:37:39.169Z</published>
    <updated>2015-12-27T16:37:39.169Z</updated>
    <content type="html"><![CDATA[<p><img src="https://upload.wikimedia.org/wikipedia/zh/7/78/100-2005-b.jpg" alt=""></p>
<p>26日是中国最有争议的一个人的诞辰日，有人说他是人民领袖大救星，有人说他是独裁恶魔。他建立了一个国家，又亲手毁掉了这个国家。虽然他已经去世40年，但是对他的争论至今未停休，而他给这片国土留下的痕迹至今也未能抹去。</p>
<p>官方在他死后，为了避免争议，对他个人以“三分功，七分过”做了定性，可是这并没有消除民间的质疑声。</p>
<p>他的崇拜者把他奉若神明，认为他完美无缺，认为现在社会上的种种问题都是没有坚持贯彻当年他一手制定的路线。他们认为解决中国所有问题的途径只有一条：那就是重回当年的道路。他们甚至认为如今的官方是对当年此人路线的背叛，已经丧失了执政的能力。这么一群人在网络上被称为“毛左”，他们是坚定的激进的毛路线的支持者。在他们的思想中，不存在理性与逻辑，唯一正确的只有毛思想与毛语录。他们是当年极权体制下个人崇拜教育的成果和牺牲品。当这颗他们眼中的红太阳陨落之后，他们的政治梦想也随之破灭，只能把对现实的种种不满转为对当年体制的怀念。这是一群固步自封的人，终究会被扫进历史的垃圾堆。</p>
<p>另一部分人，认为他是一个独裁者，是一个恶魔，对国家前三十年的失败要负主要责任。建国后，他发动了公有化运动，消灭了中国的资产阶级，让一大批有望成为百年品牌的企业纷纷倒掉；他发动大跃进，造成了大饥荒，饿死人数至今尚无定论，据说有千万人之多；他发动文革，十年浩劫让整个国家丧志了秩序、伦理、法制，而那群“毛左”最怀念的正是这十年的混乱时期。他独断专行，靠各种手段打击政治对手；他利用“阳谋”引蛇出洞，55万名知识分子和爱国青年被打为右派，让国家的精英一代饱受摧残。因为种种行为，他称为和希特勒、斯大林齐名的二十世纪三大暴君。</p>
<p>虽然他已经去世了40年，但是关于他以及他生前很多问题的讨论仍旧是禁区。央视王牌主持之一的毕福剑就曾经因为在酒桌上调侃他而被央视解雇，至今未能成功复出。当然，这种禁区并不只是针对体制内的人，对于体制外的人同样存在禁区。不论这个人真实形象如何，他毕竟是建国后的第一代领导核心，也是这个政府执政合法性的来源之一，因此无论怎么样是不可能对他进行全盘否定的。因此，对于他的讨论，尤其对灾难性事件，比如“朝鲜战争”、“大跃进”、“文革”、“反右扩大化”、“三年困难时期”等的讨论都是无法公开进行的。</p>
<p>作为一个领袖，他的形象是不能有瑕疵的，这是世界上所有领袖的共有特质，他肯定不会例外。我们接受的和他有关的事实，也是随着政治环境的变动和政治需要而不断改变。而每一个事件背后，终究会有人出来为他背锅。比如，“三年困难时期”在以往一直被描述为“三年自然灾害”，“自然灾害”很巧妙地忽略了灾难中的人为因素，毕竟人力不胜天。但是随着更多的资料被挖掘，越来越多的人相信那三年并没有大规模的自然灾害发生，因此后来那三年就被称为了“三年困难时期”。“文革”的爆发与进展也一直被认为是四人帮，尤其是江青的责任，而他只是一个受到了奸佞小人蛊惑的无辜领袖。虽然关于“文革”的讨论在国内并不能公开进行，但是还是有越来越多的关于“文革”的资料表明了这些浩劫的真实面貌。</p>
<p>然而他的存在也不只是他个人的原因，他的存在得益于这片土地上所有人的努力。国人经历了上千年帝制社会，对于明君的渴望可谓至极。人们总是想有一位英明神武的君主带领大家致富奔小康，却从来不敢想象没有皇帝的日子是何样。这种向往强人政治的心态至今依然存在于大多数人心中，即使无数的人已经被这种政治生态坑的体无完肤。不知道这片土地上到底有多少人设想过没有皇帝会怎么样？自己的事情自己做主又会怎样？</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="https://upload.wikimedia.org/wikipedia/zh/7/78/100-2005-b.jpg" alt=""></p>
<p>26日是中国最有争议的一个人的诞辰日，有人说他是人民领袖大救星，有人说他是独裁恶魔。他建立了一个国]]>
    </summary>
    
      <category term="CPC" scheme="http://shengruoyu.github.io/tags/CPC/"/>
    
      <category term="Mao Tse-tung" scheme="http://shengruoyu.github.io/tags/Mao-Tse-tung/"/>
    
      <category term="PRC" scheme="http://shengruoyu.github.io/tags/PRC/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用Github和Hexo搭建个人博客]]></title>
    <link href="http://shengruoyu.github.io/2015/12/25/hexo_blog/"/>
    <id>http://shengruoyu.github.io/2015/12/25/hexo_blog/</id>
    <published>2015-12-25T07:26:31.849Z</published>
    <updated>2015-12-25T07:26:31.849Z</updated>
    <content type="html"><![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/github%2Bhexo.jpg" alt=""></p>
<h3 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h3><p>以下内容仅适用于Windows平台。</p>
<p>以往大家搭建客人博客的时候，首选的都是Wordpress平台。但随着Wordpress平台越来越臃肿，轻便、简洁的博客平台成了众多网友的新选择，而Hexo正是其中之一。Hexo可以借助Github提供的免费GithubPage，助您方便地搭建轻量级的个人博客平台。</p>
<ul>
<li><strong>注册Github账号并创建GithubPage</strong></li>
<li><strong>安装Node.js和Github客户端</strong></li>
<li><strong>安装Hexo并初始化</strong></li>
<li><strong>配置Hexo并部署至GithubPage</strong></li>
</ul>
<hr>
<h3 id="u6CE8_u518CGithub_u8D26_u53F7_u5E76_u521B_u5EFAGithubPage"><a href="#u6CE8_u518CGithub_u8D26_u53F7_u5E76_u521B_u5EFAGithubPage" class="headerlink" title="注册Github账号并创建GithubPage"></a>注册Github账号并创建GithubPage</h3><p><img src="http://78rbxs.com1.z0.glb.clouddn.com/github-mark.png" alt=""></p>
<ol>
<li>前往 <a href="https://github.com" target="_blank" rel="external">Github</a> 创建账号，如<code>githubid</code>，并登陆。</li>
<li>新建<strong>Repository</strong> ，Repository名字取为<code>githubid.github.io</code>，注意此处名字必须与注册的id一一对应！</li>
<li>首次创建可能需要等待审核，审核通过后GithubPage即创建成功，可以尝试访问<code>githubid.github.io</code>。</li>
</ol>
<hr>
<h3 id="u5B89_u88C5Node-js_u548CGithub_u5BA2_u6237_u7AEF"><a href="#u5B89_u88C5Node-js_u548CGithub_u5BA2_u6237_u7AEF" class="headerlink" title="安装Node.js和Github客户端"></a>安装Node.js和Github客户端</h3><p><img src="http://78rbxs.com1.z0.glb.clouddn.com/nodejs-green.png" alt=""></p>
<ol>
<li>前往<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a> 根据自己操作系统下载Node.js安装包，笔者选择的是v4.2.4 LTS x64。下载完后进行安装。</li>
<li>检查系统环境变量path下是否有npm路径，如没有请手动添加。<img src="http://78rbxs.com1.z0.glb.clouddn.com/Capture.PNG" alt=""></li>
<li>下载<a href="https://desktop.github.com/" target="_blank" rel="external">Github Windows客户端</a>，安装并登录。</li>
<li>配置Github默认Clone路径，此处可以根据个人喜好随意选取。</li>
</ol>
<hr>
<h3 id="u5B89_u88C5Hexo_u5E76_u521D_u59CB_u5316"><a href="#u5B89_u88C5Hexo_u5E76_u521D_u59CB_u5316" class="headerlink" title="安装Hexo并初始化"></a>安装Hexo并初始化</h3><p>打开Github Shell，输入npm命令，安装Hexo。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> hexo-cli -<span class="keyword">g</span></span><br><span class="line">npm <span class="keyword">install</span> hexo <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure>
<p>根据个人喜欢，在任意位置建立Hexo文件夹（比如：D: \Github\Hexo，并在Github shell内切换至此文件夹。）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt; <span class="comment">#初始化Hexo文件夹</span></span><br><span class="line"><span class="built_in">cd</span> Hexo <span class="comment">#进入Hexo文件夹</span></span><br><span class="line">npm install <span class="comment">#安装Hexo</span></span><br></pre></td></tr></table></figure>
<p>安装Hexo插件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> hexo-generator-<span class="keyword">index</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-<span class="keyword">archive</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-<span class="keyword">category</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-tag <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-heroku <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-rsync <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-openshift <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-renderer-marked@<span class="number">0.2</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-renderer-stylus@<span class="number">0.2</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-feed@<span class="number">1</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-sitemap@<span class="number">1</span> <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="u914D_u7F6EHexo_u5E76_u90E8_u7F72_u81F3GithubPage"><a href="#u914D_u7F6EHexo_u5E76_u90E8_u7F72_u81F3GithubPage" class="headerlink" title="配置Hexo并部署至GithubPage"></a>配置Hexo并部署至GithubPage</h3><p>Hexo的配置都保存在其根目录下的_config.yml文件中。我们可以打开对其进行配置。</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># Hexo Configuration</span></span><br><span class="line"><span class="preprocessor">## Docs: http://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="preprocessor">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Site #网站设置，按照个人喜好填写</span></span><br><span class="line"><span class="label">title:</span>  <span class="preprocessor">#网站标题</span></span><br><span class="line"><span class="label">subtitle:</span> <span class="preprocessor">#网站副标题</span></span><br><span class="line"><span class="label">description:</span> <span class="preprocessor">#网站描述</span></span><br><span class="line"><span class="label">author:</span> <span class="preprocessor">#作者</span></span><br><span class="line"><span class="label">language:</span> <span class="preprocessor">#语言，支持zh-CN</span></span><br><span class="line"><span class="label">timezone:</span> <span class="preprocessor">#时区</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># URL</span></span><br><span class="line"><span class="preprocessor">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="label">url:</span> http://githubid.github.io  <span class="preprocessor">#此处请填入github page的域名</span></span><br><span class="line"><span class="label">root:</span> /</span><br><span class="line"><span class="label">permalink:</span> :year/:month/:day/:title/</span><br><span class="line"><span class="label">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Extensions </span></span><br><span class="line"><span class="preprocessor">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="preprocessor">## Themes: http://hexo.io/themes/</span></span><br><span class="line"><span class="label">theme:</span> maupassant <span class="preprocessor">#此处可以更改Hexo主题</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Deployment #此处请填入你的github账号信息</span></span><br><span class="line"><span class="preprocessor">## Docs: http://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="label">deploy:</span></span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:githubid/githubid.github.io.git <span class="preprocessor">#github page的git地址</span></span><br><span class="line">  branch: master <span class="preprocessor">#git分支</span></span><br></pre></td></tr></table></figure>
<p>所有配置都编辑并保存好之后，在Github Shell中Hexo目录运行如下代码：</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> g <span class="comment">#生成本地静态网页文件</span></span><br><span class="line">hexo s <span class="comment">#打开Hexo本地服务器，用于预览</span></span><br></pre></td></tr></table></figure>
<p>此时，可以打开<a href="127.0.0.1:4000" target="_blank" rel="external">127.0.0.1:4000</a> 进行预览，如预览效果满意，则将Hexo部署至Github。</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> deploy <span class="comment">#将网页部署至GithubPage</span></span><br></pre></td></tr></table></figure>
<p>新建文章并发表至Blog</p>
<p>Hexo可以使用如下命令新建文章：</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> n <span class="comment">#新建文章</span></span><br></pre></td></tr></table></figure>
<p>但是，这种方式对于Windows平台并不友好。其实，Hexo的文章都保存在\source_posts目录下，作者可以通过在此目录下新建filename.md文件的方式新建文章。</p>
<p>新建文章编写并保存好之后，重新生成本地静态网页并发表至博客，其步骤和上面所述部署Hexo至GithubPage一样：</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> g <span class="comment">#生成本地静态网页文件</span></span><br><span class="line">hexo s <span class="comment">#预览</span></span><br><span class="line">hexo daploy <span class="comment">#将文章发表</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/github%2Bhexo.jpg" alt=""></p>
<h3 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerl]]>
    </summary>
    
      <category term="Blogger" scheme="http://shengruoyu.github.io/tags/Blogger/"/>
    
      <category term="Github" scheme="http://shengruoyu.github.io/tags/Github/"/>
    
      <category term="Hexo" scheme="http://shengruoyu.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello]]></title>
    <link href="http://shengruoyu.github.io/2015/12/22/first/"/>
    <id>http://shengruoyu.github.io/2015/12/22/first/</id>
    <published>2015-12-22T12:58:44.885Z</published>
    <updated>2015-12-22T12:58:44.885Z</updated>
    <content type="html"><![CDATA[<p>这是我使用 <strong> markdown</strong> 语法书写的第一篇博客，其实我也不知道拿这个博客用来做甚，只是觉着比较好玩就建起来了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这是我使用 <strong> markdown</strong> 语法书写的第一篇博客，其实我也不知道拿这个博客用来做甚，只是觉着比较好玩就建起来了。</p>
]]>
    </summary>
    
      <category term="github" scheme="http://shengruoyu.github.io/tags/github/"/>
    
      <category term="hexo" scheme="http://shengruoyu.github.io/tags/hexo/"/>
    
      <category term="markdown" scheme="http://shengruoyu.github.io/tags/markdown/"/>
    
  </entry>
  
</feed>
