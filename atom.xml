<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[若愚谷]]></title>
  <subtitle><![CDATA[狗窝]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://shengruoyu.com/"/>
  <updated>2016-03-22T12:21:42.000Z</updated>
  <id>http://shengruoyu.com/</id>
  
  <author>
    <name><![CDATA[Ruoyu Sheng]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[十年]]></title>
    <link href="http://shengruoyu.com/2016/03/22/twitter_birthday/"/>
    <id>http://shengruoyu.com/2016/03/22/twitter_birthday/</id>
    <published>2016-03-22T12:24:27.273Z</published>
    <updated>2016-03-22T12:21:42.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/twitter-happy-birthday.jpg" alt=""></p>
<p>十年前，我正在一个封闭的山城里，幻想着外面的世界，为了即将到来的高考而努力；与此同时，在地球的某一个角落，诞生了一家对我影响至深的网站——Twitter。当Jack Dorsey发出史上第一条tweet的时候，他或许也没想到这会给世界带来些什么改变：</p>
<blockquote>
<p>just setting up my twttr</p>
</blockquote>
<p>到昨天为止，这条推已经发出了十年之久，而推特也迎来了它的十周岁生日。只是，十年后，高墙依旧在，不禁让人唏嘘。</p>
<p>我是2009年年中旬接触到Twitter的。那时候作为中国最早的微博客服务之一的饭否遭到某些有关力量的打压，导致一大批饭否用户“流亡”至Twitter，再加上其他一些原因，推特在09年迎来了中文用户大爆发。在Twitter十周年生日的时候，大家都在回忆自己最初上推的岁月，其中有一大批中文圈用户都是在09年前后上推的。</p>
<p>相对于英文等字母文字，中文能够在Twitter 140个字符的限制内表达更多的东西，当然每次提到这个问题的时候，大家都要禁不住去黑一下德国人。因而，这种微博客服务对中文用户有着相当大的吸引力，毕竟在这个速食的年代，许多人是没有精力阅读和书写长篇大论的，而推特140字符的长度，既能完整表达又能快速阅读，推特靠着这个特点吸引了大批中文用户，而这些中文用户组成了推特上一个非常特殊的群体：推特中文圈。</p>
<p>之所以说这个群体比较特殊，是因为推特毕竟是一个以英文用户为主的网站；而普通用户由于女友墙的存在并不能顺利登陆推特。因此，推特上的活跃中文用户是一批被过滤之后的用户，至少能够为了翻越这堵墙而不懈折腾。但推特中文圈又是包罗万象的，像任何一个网络社区，各色人等都有，有生活推、技术宅、民逗、五毛、人赢、现充。。。</p>
<p>Twitter可以说是对我影响最大的两个网站之一，另一个是Google。由于Twitter在09年开始不时遭到屏蔽，直到后来完全不能访问，为了能够顺利登陆Twitter，我必须随时更新自己的装备。还好，Twitter（当年的）开放性，导致了对于推特的完全封锁几乎不可能实现。彼时圈内曾经流传一句玩笑：推特能封住，母猪会上树。在这么多年与女友墙的战斗中，我浪费掉了无数的时间，当然也积累一定的知识储备。设想如果没有Twitter的存在，一个工科生嘴里怎么会整天冒出一堆网络术语。</p>
<p>对我来说，Twitter相对于其他国内社区最大的优势就是自由。你不会因为自己的言论，被删推被封号，当然可能会被喝茶或者被失踪。甚至有一段时间，推友们竞相以被喝茶为荣。提及此处，不得不说一下最近被失踪的某位著名媒体人，我也是在Twitter上最先知道这个消息的。</p>
<p>罗斯福曾经提出过四大自由：“言论自由、信仰自由、免于贫困及免于恐惧的自由”。在Twitter上，我们实现了墙内所没有的言论自由，却依然不能躲开恐惧带来的阴影，甚至这种习惯性的恐惧会让你下意识地进行自我阉割。这或许是我们长期生活在铁幕之下养成的自我保护手段。当我的这篇文章落于纸上的时候，已经与我内心所想大不相同，毕竟未知的恐惧可以摧毁一切坚韧的力量。</p>
<p>祝推特生日愉快！</p>
<p>祝病魔早日战胜方校长！</p>
<p>祝女友墙早日倒塌！</p>
<p>祝恐惧不再！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/twitter-happy-birthday.jpg" alt=""></p>
<p>十年前，我正在一个封闭的山城里，幻想着外面的世界，为了即将到来的高考而努力；与此同时，在地球]]>
    </summary>
    
      <category term="gfw" scheme="http://shengruoyu.com/tags/gfw/"/>
    
      <category term="internet" scheme="http://shengruoyu.com/tags/internet/"/>
    
      <category term="twitter" scheme="http://shengruoyu.com/tags/twitter/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[至少现在，比AI更令人担心的是人类本身]]></title>
    <link href="http://shengruoyu.com/2016/03/12/ai_1984/"/>
    <id>http://shengruoyu.com/2016/03/12/ai_1984/</id>
    <published>2016-03-11T18:13:07.470Z</published>
    <updated>2016-03-09T18:21:58.787Z</updated>
    <content type="html"><![CDATA[<p>如果没有这场比赛，我大概至今也不会去关注围棋这项对我来说超级陌生的运动。而Google及其下的DeepMind可是借助AlphaGo赚足了世人的眼球，在战胜欧洲围棋冠军之后又向世界级的围棋冠军选手李世石发起挑战。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/75_6147761d_a31d_2581_65be_ac9191f7195c_1.jpg" alt=""></p>
<p>虽然比赛采取五局三胜制，但AlphaGo旗开得胜首先拿下一局，还是让不少人惊叹。这已经不是机器人第一次战胜人类冠军的事情发生了。早在1997年，IBM的Deep Blue（深蓝）机器人就曾经战胜了国际象棋冠军帕斯卡洛夫。从那时起，就有部分人开始担心，机器人终将逐渐在各个领域取代并战胜人类，直至最后奴役人类。</p>
<p>然而，现在的AI技术还远未到达奴役人类的地步。现在的AI仅仅是拥有强大的计算能力和学习能力，并没有自主意识、情感、道德等。可能在未来，人工智能会在这些欠缺的领域取得长足的进步，并弥补现在的缺憾，但是人类现在<strong>或许</strong>还不用为此事担心，人类需要担心的是人类本身。</p>
<p>正如前段时间被起诉的快播CEO王欣所言：</p>
<blockquote>
<p>技术本身并不可耻！</p>
</blockquote>
<p>技术本身并没有什么对与错，也没有所谓的荣誉与耻辱，关键在于掌握与运用技术的人。在AI尚未形成个人意识的现在，作恶的只能是人类本身，而不可能是其他。就像百度在2015年底高调宣布自己的无人驾驶技术成果的时候，互联网上广泛流传着关于这件事的一个段子：</p>
<blockquote>
<p>“百度为什么要做无人车？” “这样以后你出门看病打到一辆百度车，刚说完去医院，它就锁死车门一路开到竞价排名最高的那间医院去” via <a href="https://twitter.com/CJie/status/675302165460586496" target="_blank" rel="external">@CJie</a></p>
</blockquote>
<p>一个掌握着尖端科技的企业，本以为自己的技术成果会受到广泛好评，却不料得到的却是大众的无情嘲讽，为何？大概是作恶太多、罪孽深重了吧。当然，专业人士大概会对其技术做出更精准的专业评价。</p>
<p>AI领域有一门非常重要的学科——机器学习，我对于此学科也并没有深入了解，只是道听途说，但是现在已有足够的证据证明女友墙可能已经应用了机器学习技术来实现对信息自由流动的封锁。<a href="http://blog.zorinaq.com/?e=81" target="_blank" rel="external"><em>My Experience With the Great Firewall of China</em></a> 是一位国外的信息安全专家根据来到中国之后的女友墙体验所写，明确提出了女友墙使用了机器学习算法。</p>
<p>而DeepMind却想让运用在AlphaGo身上的技术应用于医疗产业，甚至有可能颠覆医疗产业的现状。不得不说这是一个很宏伟的目标，有可能对人类的医疗产业产生极其深远的影响。不仅如此，这些技术还可以被用于灾害预测、风险控制等一系列复杂领域。不得不说，这些应用一旦获得成功，将为DeepMind带来丰厚利润的同时也将对人类社会做出巨大贡献。</p>
<p>人类至今还未摆脱自身个体或团体之间的相互奴役相互压迫，却去思考遥远的未来AI对人类的压迫，甚至以此为理由反对科技的进步，多少有些杞人忧天的味道。至今为止，每一次的科技进步都带来了个体的解放，个人意识的觉醒奠定了现代民主制度建立与发展的基石。想想<del>大中华局域网</del>互联网这几年给中国带来的翻天覆地的变化，你大概就能感受到科技改造社会的力量有多强大，这种改造当然并不仅限于让生活更加方便这个层次。</p>
<p>现在令人恐怖的并不是未来的AI到底有多智能，而是手握海量数据与最前沿科技的邪恶IT巨头们。今年三星S7发布会时，扎克伯克入场时的一张照片就被众多网民进行了过分解读，而这种解读实际上正在越来越靠近现实。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20160223_104555_844.jpg" alt=""></p>
<p>如果你读过小说<a href="http://book.douban.com/subject/4820710/" target="_blank" rel="external">《1984》</a>的话，大概就能知晓大家对这张图片做出了如何的解读。所有人，都处于一种无个人意识的状态，老大哥在掌控着一切，而这些科技巨头们就像小说中的真理部一样掌握着你所能接触到的一切信息。</p>
<p>如今想想这一切离我们真心已经不再遥远。“万事不同问度娘”已成为国内诸多网友的习惯，虽然百度上充斥着各种虚假与劣质的信息，但是这种习惯让百度掌控了用户接触信息的窗口，它完全有能力让你只看到它想让你看到的信息，而它现在也正是这么做的。而它也能通过用户的搜索习惯与浏览习惯，不断过滤掉用户不喜欢的信息，直到有一天，你在互联网上看到的一切都是你喜欢看到的。当然百度肯定不仅仅满足于此，它要把它的触角深入到包括搜索在内的你生活的各个角落，并推出智能助手“度秘”，希望你完全将自己的生活交给它。当然，腾讯和阿里也都在这么做。</p>
<p>然而这几家却都是体量巨大的邪恶巨头😈！鬼晓得它们拿到搜集到用户数据会去做什么，鬼晓得它们会在用户的设备上做什么手脚。说不准将来的某一天，一觉醒来，你就置身于1984的国度，而正是你一步步把自己送进了这个国度。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>如果没有这场比赛，我大概至今也不会去关注围棋这项对我来说超级陌生的运动。而Google及其下的DeepMind可是借助AlphaGo赚足了世人的眼球，在战胜欧洲围棋冠军之后又向世界级的围棋冠军选手李世石发起挑战。</p>
<p><img src="http://78rbxs]]>
    </summary>
    
      <category term="1984" scheme="http://shengruoyu.com/tags/1984/"/>
    
      <category term="AI" scheme="http://shengruoyu.com/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[VR初体验]]></title>
    <link href="http://shengruoyu.com/2016/03/12/cardboard/"/>
    <id>http://shengruoyu.com/2016/03/12/cardboard/</id>
    <published>2016-03-11T17:03:26.793Z</published>
    <updated>2016-03-11T17:00:59.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/2016-03-11%2012.55.24.jpg" alt=""></p>
<p>Cardboard是Google公司在2014年推出的廉价VR设备，廉价到仅有几块硬纸板、两个凸透镜和两块磁铁构成。虽然已经如此廉价，但是它推出至今1年多的时间，我也没有体验上。正好前两天，<a href="http://www.smzdm.com" target="_blank" rel="external">色魔张大妈</a>上有某天猫商家推出3元钱包邮的产品，于是我就抱着少吃一顿早饭的想法果断下单。岂料快递签收并给商家五星好评之后，商家又返还2元，简直不能更划算。</p>
<p>收到货之后，第一时间拆箱，并按照说明组装。组装之后如前图所示，还是蛮可爱的。其实，喜欢DIY的话，这个东西也可以自己制作，非常简单，<a href="https://www.google.com/get/cardboard/" target="_blank" rel="external">Cardboard官方网站</a>有详细的制作说明和图纸。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/FireShot%20Capture%206%20-%20%E8%8E%B7%E5%8F%96%20Cardboard%20%E2%80%93%20Google_%20-%20https___www.google.com_intl_zh-CN_A.png" alt=""></p>
<p>至此，我靠着这么一个廉价的小物件，打开了VR的大门，初次感受到了VR的体验。</p>
<p>我从Google Play下载了官方的Cardboard应用，并一并下载了多款支持Cardboard的VR应用。个人感觉其中的 <a href="https://play.google.com/store/apps/details?id=com.drashvr.titansofspacecb&amp;hl=en" target="_blank" rel="external">Titans of Space ® Cardboard VR</a> 是其中做的非常赞的。</p>
<p>玩VR要的就是一种身临其境的感觉，而一番体验下来我觉着在玩街景的时候这种感觉是最棒的，毕竟用Cardboard玩游戏还是相当不方便的。我在多年以前就曾经在济南的某些地方，利用Streetview拍过一些全景相片，当时在电脑上看起来感觉超级棒，现在配合上这么一个小东西，直接体验飞跃。你站在原地不动，就像到了现场一样，随着身体的转动，眼前的景象很自然地移动，如果是Google Maps街景的话，还可以像如真人般在街道漫步，只是由于伟大的女友墙的存在，让这种体验并不完美。</p>
<p>我和舍友拿着这么一个小东西，身临其境般地逛了许多地方。只是有一点，长时间使用这个设备后眼镜会感觉比较劳累，建议不要长时间把玩。</p>
<p>或许，我应该去U2B上找一些3D电影尝试一下体验如何。。。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/2016-03-11%2012.55.24.jpg" alt=""></p>
<p>Cardboard是Google公司在2014年推出的廉价VR设备，廉价到仅有几块硬纸板、两个]]>
    </summary>
    
      <category term="cardboard" scheme="http://shengruoyu.com/tags/cardboard/"/>
    
      <category term="google" scheme="http://shengruoyu.com/tags/google/"/>
    
      <category term="vr" scheme="http://shengruoyu.com/tags/vr/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[永不消失的朋友圈]]></title>
    <link href="http://shengruoyu.com/2016/03/03/wechat_moment/"/>
    <id>http://shengruoyu.com/2016/03/03/wechat_moment/</id>
    <published>2016-03-03T15:48:09.500Z</published>
    <updated>2016-03-03T15:43:34.000Z</updated>
    <content type="html"><![CDATA[<p>前两天把入手的一加刷了CM12，又安装了xposed framework，耍起来甚是欢乐。xposed框架里有一款针对微信的神器模块：WechatUnrecalled，此模块可以阅读撤回的聊天信息和朋友圈回复。于是，靠着此神器我发现了一个怪异的现象：有些未读的却已被删除的朋友圈照片，我依然可以正常加载阅读。我顿时感觉到，腾讯是不是没有在服务器端删除这些照片？</p>
<p>此时应该果断祭上神器Charles抓包嘛，毕竟朋友圈的图片全是明文传输，抓包还是非常简单的。设置好Charles http代理，抓取了朋友圈的某张图片:</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-03-03%20%E4%B8%8B%E5%8D%8811.10.29.png" alt=""></p>
<p>在抓包完毕并获得图片URL之后，删除此朋友圈，图片URL仍可访问。由于朋友圈使用的是webp格式的图片，可能只有Blink内核浏览器（即chrome或chromium套壳浏览器）支持，其他浏览器会弹出保存文件的提示。在笔者写完这篇文章，即抓包半小时后，此链接仍然可以正常访问。</p>
<p>🐧家太令人桑心了，有这么多空间保存朋友圈被删除的图片，干嘛不推出聊天记录实时同步功能呢？劳资既然用微信了，已经不在意安全问题了/(ㄒoㄒ)/~~</p>
<p>最后附上此图片URL，看看什么时候会失效：<a href="http://mmsns.qpic.cn/mmsns/0pygn8iaZdEexRZpvV3gmB3kLmk4uzoptMOtWfCOI1cLbz5LY7EfAzM03oFib2ysTTmWgbFcXzc8c/0?tp=webp" target="_blank" rel="external">http://mmsns.qpic.cn/mmsns/0pygn8iaZdEexRZpvV3gmB3kLmk4uzoptMOtWfCOI1cLbz5LY7EfAzM03oFib2ysTTmWgbFcXzc8c/0?tp=webp</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>前两天把入手的一加刷了CM12，又安装了xposed framework，耍起来甚是欢乐。xposed框架里有一款针对微信的神器模块：WechatUnrecalled，此模块可以阅读撤回的聊天信息和朋友圈回复。于是，靠着此神器我发现了一个怪异的现象：有些未读的却已被删除的朋]]>
    </summary>
    
      <category term="internet" scheme="http://shengruoyu.com/tags/internet/"/>
    
      <category term="wechat" scheme="http://shengruoyu.com/tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android平台远程控制神器TeamviewerQuickSupport]]></title>
    <link href="http://shengruoyu.com/2016/03/01/Android_Teamviewer/"/>
    <id>http://shengruoyu.com/2016/03/01/Android_Teamviewer/</id>
    <published>2016-03-01T05:38:03.677Z</published>
    <updated>2016-03-01T05:33:32.000Z</updated>
    <content type="html"><![CDATA[<p>我们日常中经常需要远程控制某些设备，这就要用到一些远程控制软件，而Teamviewer正是这些软件中的佼佼者。</p>
<p>我们日常遇到的需要远程控制的场合大多数是使用PC或者手机远程控制远程端的PC，但是在某些特殊场合则需要使用PC或者手机远程控制手机。而使用Teamviewer PC/Mac客户端配合Teamviewer QuickSupport APP或者Teamviewer Host APP则能顺利实现PC/Mac端远程控制Android手机。</p>
<p>笔者在Google Play成功安装Teamviewer QuickSupport APP，但是APP提示远程控制的实现还需要安装Teamviewer QSAddon。APP会在用户点击确定按钮后，在后台自动下载并安装这个APP。但是，此时却出现了问题：笔者尝试了无数次之后，QSAddon APP一直处于未能成功安装的状态。</p>
<p>借助Google搜索，笔者查询到原来QSAddon需要以System APP的方式安装在Android系统内。那此时就需要借助RootExplorer或者ESFile等Android平台的文件浏览器实现。</p>
<ul>
<li>首先，手机必须已经Root，并使RootExplorer/ESFile获得Root权限。</li>
</ul>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/2016-03-01%2005.21.00.png" alt=""></p>
<ul>
<li>将下载到的apk文件复制到/system/app目录下。可以直接放在此目录下，也可以新建一个文件下，放在子目录下。</li>
</ul>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/2016-03-01%2005.24.36.png" alt=""></p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/2016-03-01%2005.24.41.png" alt=""></p>
<ul>
<li>修改文件夹权限为rwx r-x r-x（如直接放在/system/app下则跳过此步骤）</li>
</ul>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/2016-03-01%2005.24.55.png" alt=""></p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/2016-03-01%2005.25.03.png" alt=""></p>
<ul>
<li>修改文件权限为rw- r– r–</li>
</ul>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/2016-03-01%2005.25.23.png" alt=""></p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/2016-03-01%2005.25.23.png" alt=""></p>
<ul>
<li>重启设备</li>
</ul>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-03-01%20%E4%B8%8B%E5%8D%881.32.02.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我们日常中经常需要远程控制某些设备，这就要用到一些远程控制软件，而Teamviewer正是这些软件中的佼佼者。</p>
<p>我们日常遇到的需要远程控制的场合大多数是使用PC或者手机远程控制远程端的PC，但是在某些特殊场合则需要使用PC或者手机远程控制手机。而使用Teamv]]>
    </summary>
    
      <category term="Android" scheme="http://shengruoyu.com/tags/Android/"/>
    
      <category term="Teamviewer" scheme="http://shengruoyu.com/tags/Teamviewer/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[调整Firefox书签栏图标间距]]></title>
    <link href="http://shengruoyu.com/2016/01/31/Firefox_bookmark/"/>
    <id>http://shengruoyu.com/2016/01/31/Firefox_bookmark/</id>
    <published>2016-01-30T19:53:05.953Z</published>
    <updated>2016-01-30T19:53:05.953Z</updated>
    <content type="html"><![CDATA[<p>我有一个奇怪的癖好，那就是书签栏里面的书签全部都只有Favicon而无名字。其实仅靠Favicon足以分辨各网站，这样可以大大节省书签栏的空间。但是，这却惹来一个强迫症难以忍受的问题：Windows平台下，Firefox浏览器默认书签间距太小。其实Chrome for Win&amp;Mac和Firefox for Mac等浏览器默认书签间距都刚刚好，只有Firefox for Win的书签间距过小导致书签栏其丑无比。作为一个强迫症，当然不能忍受这种不完美。好歹Firefox作为一个可以深度自定义的浏览器，还是有很方便的解决方案的。解决方案有两种，一个是使用Stylish扩展，一个是使用Userchrome.css文件。前者比较方便，我也已经测试成功；而后者有网友说可以，但是我没有测试成功。因此，我只介绍第一种方法。</p>
<p>首先，安装Stylish扩展，并重启Firefox浏览器。作为一款21世纪的主流浏览器之一，安装扩展竟然需要重启实在是一件不能忍受的事情😓。</p>
<p>然后，新建Blank Style，粘贴如下代码：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="id">#personal-bookmarks</span> <span class="tag">toolbarbutton</span><span class="class">.bookmark-item</span> <span class="rules">&#123;</span><br><span class="line"><span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">0px</span> <span class="important">!important</span></span></span>;</span><br><span class="line"><span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">7px</span> <span class="important">!important</span></span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<p>其中padding的值可以根据个人喜好进行调整，笔者调整至7px可以使得书签正好布满整个书签栏，这样看起来就舒服多了。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/Capture.png" alt="调整前"><br><img src="http://78rbxs.com1.z0.glb.clouddn.com/Capture2.png" alt="调整后"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我有一个奇怪的癖好，那就是书签栏里面的书签全部都只有Favicon而无名字。其实仅靠Favicon足以分辨各网站，这样可以大大节省书签栏的空间。但是，这却惹来一个强迫症难以忍受的问题：Windows平台下，Firefox浏览器默认书签间距太小。其实Chrome for Wi]]>
    </summary>
    
      <category term="bookmark" scheme="http://shengruoyu.com/tags/bookmark/"/>
    
      <category term="firefox" scheme="http://shengruoyu.com/tags/firefox/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[博客启用独立域名]]></title>
    <link href="http://shengruoyu.com/2016/01/30/domain/"/>
    <id>http://shengruoyu.com/2016/01/30/domain/</id>
    <published>2016-01-30T09:11:53.048Z</published>
    <updated>2016-01-30T09:11:53.048Z</updated>
    <content type="html"><![CDATA[<p>即日起，博客启用独立域名 <a href="http://shengruoyu.com">http://shengruoyu.com</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>即日起，博客启用独立域名 <a href="http://shengruoyu.com">http://shengruoyu.com</a></p>
]]>
    </summary>
    
      <category term="blog" scheme="http://shengruoyu.com/tags/blog/"/>
    
      <category term="dmain" scheme="http://shengruoyu.com/tags/dmain/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[shadowsocks实用教程]]></title>
    <link href="http://shengruoyu.com/2016/01/10/shadowsocks_all/"/>
    <id>http://shengruoyu.com/2016/01/10/shadowsocks_all/</id>
    <published>2016-01-10T12:22:14.870Z</published>
    <updated>2016-01-10T12:22:14.870Z</updated>
    <content type="html"><![CDATA[<p>本教程针对Windows平台。</p>
<h2 id="u5DE5_u5177"><a href="#u5DE5_u5177" class="headerlink" title="工具"></a>工具</h2><p>在Windows平台使用Shadowsocks请自觉卸载所有国产软件，尤其是<strong>360系</strong>的软件，包括但不限于360安全卫士、360免费杀毒、360安全浏览器、360手机助手以及鲁大师等。</p>
<p>Shadowsocks Windows客户端下载地址：</p>
<p><a href="https://kiwivm.it7.net/dist/shadowsocks-win-2.3.zip" target="_blank" rel="external">Win7:shadowsocks-win-2.3.zip</a></p>
<p><a href="https://kiwivm.it7.net/dist/shadowsocks-win-dotnet4.0-2.3.zip" target="_blank" rel="external">Win8+:shadowsocks-win-dotnet4.0-2.3.zip</a></p>
<p>浏览器：请选择Chrome、Firefox等，杜绝使用诸如百度浏览器、360安全浏览器、淘宝浏览器、UC浏览器、搜狗浏览器等国产诸浏览器。</p>
<p>Chrome下载地址：<a href="https://www.google.com/chrome/browser/desktop/index.html" target="_blank" rel="external">https://www.google.com/chrome/browser/desktop/index.html</a></p>
<p>Firefox下载地址：<a href="https://www.mozilla.org/zh-CN/firefox/new/" target="_blank" rel="external">https://www.mozilla.org/zh-CN/firefox/new/</a></p>
<h2 id="u521D_u7EA7_u6559_u7A0B"><a href="#u521D_u7EA7_u6559_u7A0B" class="headerlink" title="初级教程"></a>初级教程</h2><p>下载完Shadowsocks客户端，解压至任一目录下即可开始进行配置。首次配置请双击shadowsocks.exe文件，打开程序配置窗口。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/%E6%8D%95%E8%8E%B7.png" alt=""></p>
<p>将服务器信息填入窗口各文本框中即可。对着系统右下角通知区域的Shadowsocks图标击右键，选择启用系统代理，根据需要选择系统代理模式，一般选择PAC模式，勾选开机启动，并从GFWList更新PAC。</p>
<p>自此，即可使用shadowsocks代理。</p>
<h2 id="u9AD8_u7EA7_u6559_u7A0B"><a href="#u9AD8_u7EA7_u6559_u7A0B" class="headerlink" title="高级教程"></a>高级教程</h2><p>如果你想自定义代理规则的话，有以下几个途径：</p>
<h3 id="u4FEE_u6539pac_u6587_u4EF6"><a href="#u4FEE_u6539pac_u6587_u4EF6" class="headerlink" title="修改pac文件"></a>修改pac文件</h3><p>打开shadowsocks所在目录，用文本编辑器修改其中的pac.txt文件。</p>
<p>在此多说一句，你的服务器配置信息被保存在gui-config.json文件中，可以用文本编辑器打开直接查看、修改。</p>
<h3 id="u4F7F_u7528chrome/firefox"><a href="#u4F7F_u7528chrome/firefox" class="headerlink" title="使用chrome/firefox"></a>使用chrome/firefox</h3><p>可以使用chrome或者firefox浏览器，与其扩展程序配合使用，实现shadowsocks代理的调用以及代理规则的自定义。</p>
<p>chrome浏览器 + Proxy SwitchyOmega</p>
<p>请先去Chrome Web Store下载Proxy SwitchyOmega扩展，下载地址：</p>
<p><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="external">https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif</a></p>
<p>下载安装完毕后进行Proxy SwitchyOmega配置。</p>
<p>首先，打开Proxy SwitchyOmega配置页面（可以右键Proxy SwitchyOmega按钮——选项打开，亦可打开<a href="chrome://extensions/" target="_blank" rel="external">chrome://extensions/</a>选择Proxy SwitchyOmega选项）。</p>
<p>选择新建情景模式：</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-01-10%20%E4%B8%8B%E5%8D%887.48.11.png" alt=""></p>
<p>情景模式名称可以随意选择。选择<strong>代理服务器</strong>项，点击创建：</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-01-10%20%E4%B8%8B%E5%8D%887.52.33.png" alt=""></p>
<p>代理协议选择SOCKS5，代理服务器地址为127.0.0.1，代理端口为前面shadowsocks客户端设置的本地端口，默认为1080。设置完毕后，点击左侧<strong>应用选项</strong>按钮。</p>
<p>此时，chrome浏览器即可直接调用shadowsocks代理，只是此时只能实现全局代理，并不能实现国内外网站的分流。我们可以使用Proxy SwitchyOmega的自动切换模式实现国内外网站的分流。</p>
<p>再次新建情景模式，选择<strong>自动切换模式</strong>项，点击创建：</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-01-10%20%E4%B8%8B%E5%8D%887.59.11.png" alt=""></p>
<p>点击添加规则列表：</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-01-10%20%E4%B8%8B%E5%8D%888.00.32.png" alt=""></p>
<p>规则列表规则的情景模式选择刚才所创建的<strong>代理服务器</strong>，默认情景模式选择<strong>直接连接</strong>，规则列表格式选择<strong>AutoProxy</strong>，规则列表网址填入：<strong><a href="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt" target="_blank" rel="external">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</a></strong>。</p>
<p>点击立即更新情景模式，并应用选项，左键单击工具栏Proxy SwitchyOmega按钮，选择所创建的<strong>自动切换模式</strong>的名称，自此实现代理的自动切换。</p>
<p>Proxy SwitchyOmega在使用时，会自动显示本页面未能加载的资源数目。若出现未能加载资源，可单击Proxy SwitchyOmega按钮，点击高亮的<strong>n个资源未能加载</strong>按钮，对所选中的域名使用代理服务器情景模式即可。如想更加方便地自定义代理规则，可尝试学习通配符与正则表达式。</p>
<p>Firefox浏览器下的配置与Chrome类似，可以使用FoxyProxy或者AutoProxy扩展，在此不再赘述。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本教程针对Windows平台。</p>
<h2 id="u5DE5_u5177"><a href="#u5DE5_u5177" class="headerlink" title="工具"></a>工具</h2><p>在Windows平台使用Shadowsocks请自觉卸载所]]>
    </summary>
    
      <category term="shadowsocks" scheme="http://shengruoyu.com/tags/shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[「技术本身并不可耻」]]></title>
    <link href="http://shengruoyu.com/2016/01/08/kuaibo/"/>
    <id>http://shengruoyu.com/2016/01/08/kuaibo/</id>
    <published>2016-01-07T18:21:06.174Z</published>
    <updated>2016-01-07T18:21:06.174Z</updated>
    <content type="html"><![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20130820114942432.png" alt=""></p>
<p>昨天，是快播案受审的日子，这个陪伴无数宅男度过寂寞之夜的神器再一次受到了广泛关注。我今天也观看了一段时间的庭审直播，在此期间被我国公诉人员的基本素养、逻辑能力所折服。当然，在此我并不想多说公诉人员的逻辑推理与恶意揣测有多么可笑与无知，我想说的是王欣在庭审现场所说的一句话：</p>
<p><strong>技术本身并不可耻！</strong></p>
<p>当我看到这句话的时候，第一感觉是“深以为然”啊。他说出了技术的一个本质问题，技术本身是无任何立场的，只有使用技术的人才是关键。当一个杀手拿着利剑夺人生命的时候，杀人的并不是利剑，而是杀手！只有人，才能决定如何使用技术，只有使用技术的人才有立场。</p>
<p>快播作为国内使用P2P技术的一款播放器，满足了很多低带宽用户的视频需求。而且由于其易用性，国内诸多视频网站都使用快播的技术进行视频发布，当然这其中涉及到版权与色情问题。但是，这些问题的源头并不是快播技术本身，这些问题在快播出来之前早已存在，也并没有因为快播的关闭而消失。这两者之间并没有逻辑上的必然联系，强行将两者之间划归因果关系实在让人贻笑大方。</p>
<p>工具无好坏之分。火可以取暖煮食，也可以焚毁居所，但是盗取火种的普罗米修斯却没有被视为有罪，反倒成为受万人敬仰的神灵，为何？只因火，虽然有风险，但却可为人类带来了光明与熟食，而正是光明与熟食深深改变了人类社会！</p>
<p>称王欣为一代宅男的普罗米修斯一点不为过。他用技术的火种，点燃了无数人的生活，让无数的网民更方便快捷与更流畅地享受到了互联网视频服务。而P2P技术也被广泛应用在了无数的视频软件中，如暴风影音、优酷客户端等。而这技术背后的内容真的并不是王欣所能掌控的，就像普罗米修斯盗来火种之后，并不能阻止有人拿去作恶。</p>
<p>再以一个比较有争议的东西举例：GFW。防火墙诞生之初，是为了保障用户的信息安全，谁曾想过方校长能靠它建立起全世界最大局域网，并阻碍中国局域网与世界互联网的互联互通？你难道可以因为GFW的有罪可判定它所使用的技术都是有罪的么？当然不能！你难道可以判定GFW所使用的硬件产品也是有罪的么？当然也不能！我们可以说的是，有罪的是以阻碍信息自由流动为目的而构建GFW的程序员们，只有他们才是问题的关键所在。</p>
<p>其实，说了这么多无非就是想说一个事实：王欣发明了快播，却无法决定用户如何使用快播。快播只是一家单纯的技术公司，并不提供任何视频内容，服务器也都是出于技术考虑为了给用户提供更好的服务用作视频内容的缓存。而且，因为技术原因，快播员工本身并无法知道快播服务器缓存的视频内容。在这样的背景下，快播不可能做到对全网的视频内容进行排查，因为这个数据量实在是太大了。但是，快播公司还是按照有关部门的要求部署了110系统，而这反倒成为公诉人的质疑点：你要是不知道自己涉黄，为什么要开发屏蔽系统？这不禁让人想到南京彭宇案时法官那振聋发聩的一句话：不是你撞的你为什么要送她去医院？（来源：<a href="https://twitter.com/Arilelee/status/685027839263948800" target="_blank" rel="external">@Arilelee</a>）其实说到此我真想反问一句公诉人：要是不知道自己腐败干嘛设立反贪局。我们的法务人员连最基本的“无罪推定”原则都不能好好把握，实在让人呜呼哀哉了。</p>
<p>其实，本案还涉及一个“色情合法化”的问题。只是，在现行的法律框架内这个问题是完全没有商量的余地，但是我相信肯定有一天这个行业会从地下走向地上，会从灰暗走向阳光。毕竟，色情乃人之本性，就像这篇知乎回答里作者所说：“你永远无法阻止一个十几岁的少年喜欢网络与手淫”。（来源：<a href="https://www.zhihu.com/question/31187350/answer/50936893" target="_blank" rel="external">Zhihu</a>）</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20130820114942432.png" alt=""></p>
<p>昨天，是快播案受审的日子，这个陪伴无数宅男度过寂寞之夜的神器再一次受到了广泛关注。我今天也观看了一段时]]>
    </summary>
    
      <category term="gfw" scheme="http://shengruoyu.com/tags/gfw/"/>
    
      <category term="internet" scheme="http://shengruoyu.com/tags/internet/"/>
    
      <category term="kuaibo" scheme="http://shengruoyu.com/tags/kuaibo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我为什么反对微信公众号？]]></title>
    <link href="http://shengruoyu.com/2016/01/06/against_wechat/"/>
    <id>http://shengruoyu.com/2016/01/06/against_wechat/</id>
    <published>2016-01-06T12:05:33.251Z</published>
    <updated>2016-01-06T11:57:20.000Z</updated>
    <content type="html"><![CDATA[<p>最近两年，有越来越多的个人博主或者网站喜欢把自己的文章迁移到微信公众平台，而且这股风气愈演愈烈，大有微信一统整个中文互联网的趋势。但是，大家只看到了微信公众平台给自己文章带来的巨大阅读量与转发量，却从来没有在意过这背后的巨大隐患。</p>
<p>微信，作为中国第一的IM，有着巨大的用户基数。如今的中国，只要在用智能手机的人，男女老师几乎人人都在玩微信。而这其中很多人的一天生活以微信始，又以微信终。甚至，有的单位也拿微信用来办公。微信以社交功能作为依托，逐步发展成为一个全功能平台。而这个平台已经渗透到了中国人的日常生活、工作的各个方面，你可以用微信社交、支付、消费、阅读、游戏等等。而微信全功能平台的建成也让微信摆脱了原来的纯社交角色，成为了中文移动互联网界最重要的入口。</p>
<p>这样一个全功能的入口在很大程度上改变了国人的上网习惯。大家不再习惯去使用浏览器+搜索引擎的方式获取咨询，而是直接靠订阅号与朋友圈汲取鸡汤；大家消费购物不再打开另外的APP，微信钱包可以充话费、买电影票、打车、团购甚至京东购物；就连大家的社交习惯都被微信改变了，这年头微信打招呼要先发红包再说。微信让用户习惯了被微信包围所带来的便利，而用户至此也就逃不出微信所构筑的封闭圈。</p>
<p>就是这样一款有着数亿活跃用户的平台，对任何一个博主或者站长都是极具吸引力的。而且微信作为一款以社交功能为基础的APP，在其平台上分享文章是一件极其方便的事情。微信公众平台的出现，让用户可以订阅公众号，主动接受公众号推送，更加方便了文章作者和读者之间的互动。而朋友圈的分享让文章和公众号本身得以快速传播，获得更大的关注量。就这样，作者与读者在一个封闭的圈子里玩得不亦乐乎，整个中文互联网只剩下那黑漆漆的二维码。</p>
<hr>
<p>前文中我不止一次提到了微信平台的最大特色：<strong>封闭</strong>，而这也是其最大的隐患。</p>
<p>首先，微信公众平台的文章是不能被搜狗之外的其他搜索引擎索引的。这与互联网自由、开放的精神严重相悖。虽然说如今的中文互联网已经没有了多少高质量的文章，就连号称高水平社区的知乎也是垃圾遍地，但是微信对搜索引擎的屏蔽对中文互联网的自由、开放绝对是最大的威胁之一。（官方曾经说过：中国的互联网是自由的、开放的、有序的！）可以试想，如果有一天所有的中文资源都被搬到微信平台上的时候，用户连选择搜索引擎的权力都丧失了。不仅用户没有了选择权，长此以往作者也只能依托微信这唯一的平台，其他类型的平台都不会再有大规模的用户关注。</p>
<p>第二，微信入口太窄！现在大家在微信内获取信息的渠道无非是公众号订阅或者朋友圈分享，除此之外并没有其他方便的途径。而在微信之外获取微信内信息的渠道大概只剩那黑乎乎的二维码了，或者一个完全没有任何规律可言的URL。国内网民大多还是习惯于使用百度或者Google，使用搜狗的毕竟少数，因此很少有人通过搜索引擎获取微信平台内信息。这种窄入口天然地阻挡了一批用户，比如我这种懒得订阅公众号，也懒得使用Google之外的搜索引擎，更懒得天天去刷朋友圈的人。</p>
<p>说到此，不得不提一下那个让人深恶痛绝的『二维码』。由于微信的大规模普及，可能一定程度上还有支付宝的功劳，二维码在国内可谓大行其道。很多人在其他平台，诸如个人博客、知乎等，更新自己的文章时，都喜欢附上一个大大的公众号二维码。我想告诉这些作者的是：我既然选择了在微信之外的平台阅读您的文章，即使您附上了二维码，我也不会去扫的。更有甚者，在微信之外的平台只更新文章的节选，想阅读完整文章必须扫码关注公众号，对于有此类行为的作者我想说：我已经懒得去读您的文章了。</p>
<hr>
<p>而微信平台的另一大特色就是：『管制』。由于微信平台隶属与腾讯一家公司，而且在国内并没有强有力的对手出现，因此腾讯可以根据自身的需要或者喜好对平台的所有内容进行管制。而腾讯向来也不吝啬使用此类手段打击竞争对手，国内诸多厂家，如网易、阿里、优步等都曾有惨遭封杀的经历。</p>
<p>又由于腾讯作为一家中国互联网公司，肯定会配合有关部门对敏感信息进行监控与封杀，因此微信对于某些特殊人士来说是一款极其危险的工具，这可是有前车之鉴的。不过，现在看来这群人还没有意识到信息安全的重要性，依然在便捷与安全之间选择便捷。</p>
<p>因此，把自己的所有文章放在这样一个自己不能掌控的别人家的平台上是极其危险的一件事情，说不准某一天自己的文章可能就因为不明原因被404了。对于长期写作的作者来说，找一个安全可靠的博客托管商或者购买VPS自建博客才是相对稳妥的方案。</p>
<hr>
<p>其实说了这么关于微信的『封闭』与『管制』，但是我自己也离不开这个IM，毕竟它已经成为国人最常用的社交工具了。只希望越来越多的作者能够在微信平台更新自己文章的时候，找一个安全可靠的地方放出您的文章，这样您的文章也能获得更多的受众，而读者也能更方便的接触您的作品，何乐而不为。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近两年，有越来越多的个人博主或者网站喜欢把自己的文章迁移到微信公众平台，而且这股风气愈演愈烈，大有微信一统整个中文互联网的趋势。但是，大家只看到了微信公众平台给自己文章带来的巨大阅读量与转发量，却从来没有在意过这背后的巨大隐患。</p>
<p>微信，作为中国第一的IM，有]]>
    </summary>
    
      <category term="blog" scheme="http://shengruoyu.com/tags/blog/"/>
    
      <category term="cn" scheme="http://shengruoyu.com/tags/cn/"/>
    
      <category term="wechat" scheme="http://shengruoyu.com/tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[人，终究敌不过衰老]]></title>
    <link href="http://shengruoyu.com/2016/01/05/wish/"/>
    <id>http://shengruoyu.com/2016/01/05/wish/</id>
    <published>2016-01-04T17:42:54.884Z</published>
    <updated>2016-01-04T17:42:18.000Z</updated>
    <content type="html"><![CDATA[<p>半个月前，爷爷突发脑血栓入院。原来一个完全正常的健康的老人变成了一个生活无法自理的病人，而这种转变就发生在一瞬间。我在爷爷入院后一周得知此事，当时我并没有料到他的病情会比想象中严重许多，也就不以为意，以为在医院待上几天就可以出院，毕竟平常他的身体是特别硬朗的。可是，事情的变化超出了家人的预料。</p>
<p>刚入院时，他身体还可以活动，还可以自主进食，无需别人喂；可是当我元旦去探望他的时候，他已经无法自己起床活动了，由于神经压迫导致无法正常进食也无法正常说话。而作为一个数十年的烟民，骤然戒烟让他的嘴上起满了疱疹。</p>
<p>我进入病房第一眼看到他的时候，我看到的是一躯没有任何生机的身体，瘦骨嶙峋，这不禁让人感到衰老是多么可悲却又无力阻挡的一件事情。在衰老的面前，人类不得不放弃一切本来所拥有的东西，财富、地位、尊严，在求生的欲望面前，这些身外之物都不值一提。</p>
<p>爷爷他最爱抽烟、喝酒、吃肉，而我家其他人也都继承了他这『不良』的嗜好，对于酒肉都比较贪口。可是，这一场疾病下来，以后的日子里他也就基本告别了香烟和美酒，想想自己以后可能也会以这种方式告别自己的最爱，不禁感觉有些唏嘘。</p>
<p>爷爷现在大部分时间只能躺在床上，靠吃营养餐补充身体的能量，但是当我架他下床走步的时候能够明显感受到他的焦急，可是这股子焦急劲是多么无力。</p>
<p>面对疾患在身的长辈，我却是无能为力的，我只能在此默默祝福他早日康复，祝福他还能有能力享受自己最爱的口福。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>半个月前，爷爷突发脑血栓入院。原来一个完全正常的健康的老人变成了一个生活无法自理的病人，而这种转变就发生在一瞬间。我在爷爷入院后一周得知此事，当时我并没有料到他的病情会比想象中严重许多，也就不以为意，以为在医院待上几天就可以出院，毕竟平常他的身体是特别硬朗的。可是，事情的变]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[树莓派802.1X客户端安装过程]]></title>
    <link href="http://shengruoyu.com/2015/12/31/raspberry/"/>
    <id>http://shengruoyu.com/2015/12/31/raspberry/</id>
    <published>2015-12-31T09:02:10.644Z</published>
    <updated>2015-12-31T09:02:10.644Z</updated>
    <content type="html"><![CDATA[<p>最近入手了一个小玩具——树莓派，想拿来捣鼓点有意思的东西。可是处在教育网的人都知道那可恶的802.1x认证。我也是为了在树莓派上装上802.1x客户端，折腾了好几天的功夫，最后终于在大神的指点下，成功装上并运行成功。对于一个小白用户来说，中间的各种查找资料过程实在痛苦，我就把整个的安装过程共享给大家。</p>
<p>为了方便，请先给树莓派插入一枚USB无线网卡，并连接Wifi。</p>
<h3 id="1_u3001_u9996_u5148_uFF0C_u5B89_u88C5_u5F00_u53D1_u5305"><a href="#1_u3001_u9996_u5148_uFF0C_u5B89_u88C5_u5F00_u53D1_u5305" class="headerlink" title="1、首先，安装开发包"></a>1、首先，安装开发包</h3><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install libpcap-<span class="built_in">dev</span> libssl-<span class="built_in">dev</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install pkg-config</span><br></pre></td></tr></table></figure>
<h3 id="2_u3001_u83B7_u53D6njit8021xclient_u6E90_u7801"><a href="#2_u3001_u83B7_u53D6njit8021xclient_u6E90_u7801" class="headerlink" title="2、获取njit8021xclient源码"></a>2、获取njit8021xclient源码</h3><p><a href="https://github.com/liuqun/njit8021xclient" target="_blank" rel="external">https://github.com/liuqun/njit8021xclient</a></p>
<p>下载源码压缩包后解压：<a href="https://github.com/liuqun/njit8021xclient/archive/v1.3.0.tar.gz" target="_blank" rel="external">https://github.com/liuqun/njit8021xclient/archive/v1.3.0.tar.gz</a></p>
<p>或者</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/liuqun/njit8021xclient.git</span><br></pre></td></tr></table></figure>
<h3 id="3_u3001_u5728_u6E90_u7801_u4E2D_u6240_u6709Makefile-am_u6587_u4EF6_u5F00_u5934_u6DFB_u52A0"><a href="#3_u3001_u5728_u6E90_u7801_u4E2D_u6240_u6709Makefile-am_u6587_u4EF6_u5F00_u5934_u6DFB_u52A0" class="headerlink" title="3、在源码中所有Makefile.am文件开头添加"></a>3、在源码中所有Makefile.am文件开头添加</h3><figure class="highlight fix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">AUTOMAKE_OPTIONS</span>=<span class="string">subdir-objects</span></span><br></pre></td></tr></table></figure>
<h3 id="4_u3001_u4FEE_u6539_u6E90_u7801_u76EE_u5F55_u4E0B/src/auth-c_u6587_u4EF6"><a href="#4_u3001_u4FEE_u6539_u6E90_u7801_u76EE_u5F55_u4E0B/src/auth-c_u6587_u4EF6" class="headerlink" title="4、修改源码目录下/src/auth.c文件"></a>4、修改源码目录下/src/auth.c文件</h3><p>const int DefaultTimeout 改为 500</p>
<p>SendStartPkt和SendLogoffPkt函数中uint8_t packet[16]改为uint8_t packet[30]。</p>
<h3 id="5_u3001_u5728_u6E90_u7801_u76EE_u5F55_u4E0B_u6267_u884C_u5982_u4E0B_u4EE3_u7801"><a href="#5_u3001_u5728_u6E90_u7801_u76EE_u5F55_u4E0B_u6267_u884C_u5982_u4E0B_u4EE3_u7801" class="headerlink" title="5、在源码目录下执行如下代码"></a>5、在源码目录下执行如下代码</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">autoreconf --<span class="keyword">install</span></span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make <span class="keyword">install</span></span><br></pre></td></tr></table></figure>
<h3 id="6_u3001_u7EC8_u7AEF_u6267_u884C"><a href="#6_u3001_u7EC8_u7AEF_u6267_u884C" class="headerlink" title="6、终端执行"></a>6、终端执行</h3><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">njit-client username password <span class="list">(<span class="keyword">eth0</span>)</span></span><br></pre></td></tr></table></figure>
<p>username为账号，password为密码，eth0为认证所用网卡，如为空则默认eth0。</p>
<h3 id="7_u3001_u8BA4_u8BC1_u6210_u529F"><a href="#7_u3001_u8BA4_u8BC1_u6210_u529F" class="headerlink" title="7、认证成功"></a>7、认证成功</h3><p>出现如下信息则表示认证成功</p>
<figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[*] <span class="name">Server</span>: <span class="name">Success</span>.</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>最近入手了一个小玩具——树莓派，想拿来捣鼓点有意思的东西。可是处在教育网的人都知道那可恶的802.1x认证。我也是为了在树莓派上装上802.1x客户端，折腾了好几天的功夫，最后终于在大神的指点下，成功装上并运行成功。对于一个小白用户来说，中间的各种查找资料过程实在痛苦，我就]]>
    </summary>
    
      <category term="802.1x" scheme="http://shengruoyu.com/tags/802-1x/"/>
    
      <category term="raspberry" scheme="http://shengruoyu.com/tags/raspberry/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo添加Google Adsense]]></title>
    <link href="http://shengruoyu.com/2015/12/31/adsense/"/>
    <id>http://shengruoyu.com/2015/12/31/adsense/</id>
    <published>2015-12-31T07:33:49.620Z</published>
    <updated>2015-12-31T07:33:49.620Z</updated>
    <content type="html"><![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/google-adsense.jpg" alt=""></p>
<h2 id="u6EE1_u6EE1_u90FD_u662F_u6CEA_u7684_u524D_u8A00_u90E8_u5206"><a href="#u6EE1_u6EE1_u90FD_u662F_u6CEA_u7684_u524D_u8A00_u90E8_u5206" class="headerlink" title="满满都是泪的前言部分"></a>满满都是泪的前言部分</h2><p>虽然我已经玩博客许多年了，也尝试过不同的博客平台，但是从来没有尝试过在博客中添加广告。昨晚突发奇想，尝试在博客中添加Google Adsense广告，折腾到后半夜终于添加成功。在此，笔者诚心诚意告诫各位：</p>
<p><strong> 一定要关掉浏览器的AdBlock扩展 </strong></p>
<p>如果各位没有听从笔者的告诫，后果自负。笔者就因为忘记关掉AdBlock扩展浪费了何止一小时的时间，说起来满满都是泪啊。闲话少说，进入正题：</p>
<p><strong> 如何在Hexo博客中添加Google Adsense？</strong></p>
<hr>
<h2 id="u6CE8_u518CGoogle_Adsense_u8D26_u53F7_u5E76_u7B49_u5230_u5B98_u65B9_u5BA1_u6838"><a href="#u6CE8_u518CGoogle_Adsense_u8D26_u53F7_u5E76_u7B49_u5230_u5B98_u65B9_u5BA1_u6838" class="headerlink" title="注册Google Adsense账号并等到官方审核"></a>注册Google Adsense账号并等到官方审核</h2><p>这个只需要按照Google Adsense的注册页面要求填写相应的信息即可，填写完毕后等待官方的审核通过邮件即可。</p>
<h2 id="u83B7_u53D6Google_Adsense_u5E7F_u544A_u4EE3_u7801"><a href="#u83B7_u53D6Google_Adsense_u5E7F_u544A_u4EE3_u7801" class="headerlink" title="获取Google Adsense广告代码"></a>获取Google Adsense广告代码</h2><p>账号通过审核后，在Google Adsense页面获取嵌入广告代码。</p>
<h2 id="u67E5_u770BHexo_u5F53_u524D_u4E3B_u9898_u6587_u4EF6_u5939"><a href="#u67E5_u770BHexo_u5F53_u524D_u4E3B_u9898_u6587_u4EF6_u5939" class="headerlink" title="查看Hexo当前主题文件夹"></a>查看Hexo当前主题文件夹</h2><p>进入/hexo/theme/themename/layout 目录，查看文件类型，如果文件为.ejs的话，那么恭喜你，插入Google Adsense代码将非常简单；如果文件为.jade 的话，插入代码工作将变得稍微复杂一些。</p>
<h2 id="ejs_u6587_u4EF6_u63D2_u5165Adsense_u4EE3_u7801"><a href="#ejs_u6587_u4EF6_u63D2_u5165Adsense_u4EE3_u7801" class="headerlink" title="ejs文件插入Adsense代码"></a>ejs文件插入Adsense代码</h2><p>如果theme目录下的文件是ejs文件，可以参考博文 <a href="http://lifemaxer.com/2015/02/26/hexo-add-ad/" target="_blank" rel="external">hexo添加百度联盟广告的方法</a>。在此，感谢此博客博主给出全网几乎唯一的Hexo博客添加Google Adsense &amp; 百度联盟广告的详细步骤。</p>
<h2 id="jade_u6587_u4EF6_u63D2_u5165Adsense_u4EE3_u7801"><a href="#jade_u6587_u4EF6_u63D2_u5165Adsense_u4EE3_u7801" class="headerlink" title="jade文件插入Adsense代码"></a>jade文件插入Adsense代码</h2><h3 id="u4E86_u89E3Jade"><a href="#u4E86_u89E3Jade" class="headerlink" title="了解Jade"></a>了解Jade</h3><p>可是笔者偏偏很不幸，笔者使用的是<a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="external">Maupassant</a> 。主题下的文件是jade文件，可是笔者对jade文件里的内容完全不懂，于是去搜了一下，发现原来Jade是一个模板引擎，以JavaScript实现，可以供Node使用。各位可以去 <a href="https://github.com/pugjs/jade/blob/master/Readme_zh-cn.md" target="_blank" rel="external">Jade_Readme_zh-cn</a> 稍微了解一下Jade的语法，这对于接下来的工作有较大帮助。</p>
<h3 id="html2jade_u5DE5_u5177"><a href="#html2jade_u5DE5_u5177" class="headerlink" title="html2jade工具"></a>html2jade工具</h3><p>Adsense给出的代码是html格式，但是主题目录下的文件确实jade格式，自然就要想到如何把html转化为jade。当然，对于jade语法超级熟悉的话，可是人工转换，但是有方便的工具，何乐而不用呢？</p>
<p>在线工具：<a href="http://html2jade.org/" target="_blank" rel="external">Html2jade</a><br>本地工具：<a href="https://github.com/donpark/html2jade" target="_blank" rel="external">html2jade</a></p>
<p>这两个工具的使用方法都比较简单，在此不再赘述。</p>
<h3 id="u6DFB_u52A0adsense_u53C2_u6570"><a href="#u6DFB_u52A0adsense_u53C2_u6570" class="headerlink" title="添加adsense参数"></a>添加adsense参数</h3><p>为了方便显示或者隐藏Adsense广告，笔者在/hexo/themes/maupassant/_config.yml 文件中添加了参数adsense，其值设置为true。如果其值为false，网页则不显示Adsense广告。</p>
<h3 id="u9009_u62E9_u5E7F_u544A_u63D2_u5165_u4F4D_u7F6E_u5E76_u63D2_u5165jade_u8BED_u53E5"><a href="#u9009_u62E9_u5E7F_u544A_u63D2_u5165_u4F4D_u7F6E_u5E76_u63D2_u5165jade_u8BED_u53E5" class="headerlink" title="选择广告插入位置并插入jade语句"></a>选择广告插入位置并插入jade语句</h3><p>笔者选择在侧边栏添加Adsense widget以及在文章正文后添加Adsens广告。</p>
<p>对于添加侧边栏Adsense widget，请打开/hexo/themes/maupassant/layout/base.jade文件，查找到“ <strong> #sidebar </strong> ”，,将刚才转换后的jade语句插入你想插入的位置，笔者选择的是侧边栏最上方，并在jade语句前加入if判断语句：</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.adsense == <span class="literal">true</span></span><br><span class="line">           .widget</span><br><span class="line">              .widget-title= __(<span class="symbol">'Adsens</span>e')</span><br><span class="line">              script(<span class="class"><span class="keyword">type</span>=</span><span class="symbol">'text</span>/javascript').</span><br><span class="line">                google_ad_client=<span class="string">"ca-pub-null"</span>;google_ad_slot=<span class="string">"null"</span>;google_ad_width=<span class="literal">null</span>;google_ad_height=<span class="literal">null</span>;</span><br><span class="line">              script(<span class="class"><span class="keyword">type</span>=</span><span class="symbol">'text</span>/javascript',src='.../show_ads.js')</span><br></pre></td></tr></table></figure>
<p>请检查完毕语句语法与缩进无误。请使用文本编辑器查找代码段内是否含有Tab字符，Notepad++可以使用转义字符“\t”进行查找。请查找完毕后，删除Tab字符。此处只允许使用Tab或者空格其中之一进行缩进，如果两者都用在生成静态网页的时候将会出错。</p>
<p>在侧边栏添加Adsense widget已完成，在文章正文后添加Adsense广告的方法与此类似。打开/hexo/themes/maupassant/layout/post.jade文件，选择你想插入的位置，笔者选择的是多说分享和评论之间，因此在两者的代码之间插入jade语句：</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">if</span> <span class="tag">theme</span><span class="class">.adsense</span></span><br><span class="line">        <span class="tag">script</span>(async=<span class="string">'async'</span>, src=<span class="string">'//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js'</span>)</span><br><span class="line">        <span class="tag">ins</span><span class="class">.adsbygoogle</span>(style=<span class="string">'display:block'</span>, data-ad-client=<span class="string">'ca-pub-null'</span>, data-ad-slot=<span class="string">'null'</span>, data-ad-format=<span class="string">'auto'</span>)</span><br><span class="line">        <span class="tag">script</span>.</span><br><span class="line">            (adsbygoogle = window.adsbygoogle || [])<span class="class">.push</span>(&#123;&#125;);</span><br></pre></td></tr></table></figure>
<p>同样检查语法与缩进无误后保存。由于笔者侧边栏使用的是固定尺寸的代码，文章后使用的自适应的代码，因此两者有所不同。读者可以根据自己的需求进行参照对比。</p>
<p>至此，Hexo博客中添加Google Adsense广告完毕，添加百度联盟广告的方式与此类似，不再赘述。</p>
<h2 id="u7B49_u5F85_u3002_u3002_u3002"><a href="#u7B49_u5F85_u3002_u3002_u3002" class="headerlink" title="等待。。。"></a>等待。。。</h2><p>添加完成后，就只有等待Google的第二次审核邮件了。。。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/google-adsense.jpg" alt=""></p>
<h2 id="u6EE1_u6EE1_u90FD_u662F_u6CEA_u7684_u524D_u8A00_u]]>
    </summary>
    
      <category term="adsense" scheme="http://shengruoyu.com/tags/adsense/"/>
    
      <category term="google" scheme="http://shengruoyu.com/tags/google/"/>
    
      <category term="hexo" scheme="http://shengruoyu.com/tags/hexo/"/>
    
      <category term="html" scheme="http://shengruoyu.com/tags/html/"/>
    
      <category term="jade" scheme="http://shengruoyu.com/tags/jade/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu服务器架设shadowsocks代理并同时监听IPV4和IPV6]]></title>
    <link href="http://shengruoyu.com/2015/12/28/shadowsocks/"/>
    <id>http://shengruoyu.com/2015/12/28/shadowsocks/</id>
    <published>2015-12-27T18:56:25.296Z</published>
    <updated>2015-12-27T18:56:25.296Z</updated>
    <content type="html"><![CDATA[<p>最近Bandwagonhost的VPS快要到期了，于是打算代理服务器转移至Vultr，在转移过程中解决了一个困扰已久的同时监听IPV4/6的问题。</p>
<p>其实在VPS上搭建shadowsocks是非常简易方便的，像博主这样的小白按照步骤一步一步走下来也能够成功搭建并开启。由于博主平常使用Ubuntu的机会比较多，因此此篇文章是为基于Ubuntu系统的VPS而写，对于CentOS系统的VPS其实步骤也差不多，只是有些命令上可能稍微有些出入。现在，我就把在Ubuntu搭建Shadowsocks的步骤娓娓道来：</p>
<h3 id="u5207_u6362_u81F3root_u8D26_u6237"><a href="#u5207_u6362_u81F3root_u8D26_u6237" class="headerlink" title="切换至root账户"></a>切换至root账户</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">su</span></span><br></pre></td></tr></table></figure>
<h3 id="u5B89_u88C5python-pip_u548Cshadowsocks"><a href="#u5B89_u88C5python-pip_u548Cshadowsocks" class="headerlink" title="安装python-pip和shadowsocks"></a>安装python-pip和shadowsocks</h3><p>执行如下命令：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get <span class="operator"><span class="keyword">update</span></span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">upgrade</span></span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">install</span> python-pip</span><br><span class="line">pip <span class="keyword">install</span> shadowsocks</span></span><br></pre></td></tr></table></figure>
<h3 id="u65B0_u5EFA_u5E76_u7F16_u8F91shadowsocks_u914D_u7F6E_u6587_u4EF6"><a href="#u65B0_u5EFA_u5E76_u7F16_u8F91shadowsocks_u914D_u7F6E_u6587_u4EF6" class="headerlink" title="新建并编辑shadowsocks配置文件"></a>新建并编辑shadowsocks配置文件</h3><p>由于博主想同时监听IPV4/6，但是按照网上提供的各种版本方法都未成功，只能选择新建两个配置文件并开启两个后台进程的下策。在任意路径下新建两个文件，分别命名为shadowsocksv4.json和shadowsocksv6.json。分别向两个文件写入如下内容：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#shadowsocksv4.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>:<span class="string">"0.0.0.0"</span>,      <span class="preprocessor"># 服务器IP</span></span><br><span class="line">    <span class="string">"server_port"</span>:<span class="number">98765</span>,     <span class="preprocessor"># ss服务器所使用的端口号，建议改到<span class="number">30000</span>-<span class="number">60000</span></span></span><br><span class="line">    <span class="string">"password"</span>:<span class="string">"password"</span>,   <span class="preprocessor"># ss服务器密码，轻易不要分享</span></span><br><span class="line">    <span class="string">"timeout"</span>:<span class="number">300</span>,           <span class="preprocessor"># 超时时间</span></span><br><span class="line">    <span class="string">"method"</span>:<span class="string">"aes-256-cfb"</span>   <span class="preprocessor"># 加密方式，需要和客户端配合设置</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#shadowsocksv6.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>:<span class="string">"::"</span>,           <span class="preprocessor"># 服务器IP</span></span><br><span class="line">    <span class="string">"server_port"</span>:<span class="number">98765</span>,     <span class="preprocessor"># ss服务器所使用的端口号，建议改到<span class="number">30000</span>-<span class="number">60000</span></span></span><br><span class="line">    <span class="string">"password"</span>:<span class="string">"password"</span>,   <span class="preprocessor"># ss服务器密码，轻易不要分享</span></span><br><span class="line">    <span class="string">"timeout"</span>:<span class="number">300</span>,           <span class="preprocessor"># 超时时间</span></span><br><span class="line">    <span class="string">"method"</span>:<span class="string">"aes-256-cfb"</span>   <span class="preprocessor"># 加密方式，需要和客户端配合设置</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="u5F00_u542Fshadowsocks_u540E_u53F0_u53CC_u8FDB_u7A0B"><a href="#u5F00_u542Fshadowsocks_u540E_u53F0_u53CC_u8FDB_u7A0B" class="headerlink" title="开启shadowsocks后台双进程"></a>开启shadowsocks后台双进程</h3><p>在终端执行如下命令：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c shadowsocksv4.json -d <span class="operator"><span class="keyword">start</span> <span class="comment">--pid-file ssv4.pid</span></span><br><span class="line">ssserver -<span class="keyword">c</span> shadowsocksv6.<span class="keyword">json</span> -<span class="keyword">d</span> <span class="keyword">start</span> <span class="comment">--pid-file ssv6.pid</span></span></span><br></pre></td></tr></table></figure>
<p>至此，shadowsocks代理已成功搭建并开启，欢迎享受自由的互联网！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近Bandwagonhost的VPS快要到期了，于是打算代理服务器转移至Vultr，在转移过程中解决了一个困扰已久的同时监听IPV4/6的问题。</p>
<p>其实在VPS上搭建shadowsocks是非常简易方便的，像博主这样的小白按照步骤一步一步走下来也能够成功搭建并]]>
    </summary>
    
      <category term="gfw" scheme="http://shengruoyu.com/tags/gfw/"/>
    
      <category term="shadowsocks" scheme="http://shengruoyu.com/tags/shadowsocks/"/>
    
      <category term="ubuntu" scheme="http://shengruoyu.com/tags/ubuntu/"/>
    
      <category term="vps" scheme="http://shengruoyu.com/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我是难民]]></title>
    <link href="http://shengruoyu.com/2015/12/28/wic/"/>
    <id>http://shengruoyu.com/2015/12/28/wic/</id>
    <published>2015-12-27T17:06:18.449Z</published>
    <updated>2015-12-27T17:06:18.446Z</updated>
    <content type="html"><![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/72213-72f12d0addd5660c.jpg" alt=""></p>
<p>最近几天<del>局域网</del>互联网界最受关注的事情莫过于在乌镇召开的世界互联网大会。这是中国召开的第二节世界互联网大会。虽说这次大会被冠以了互联网和世界的名号，可是大家都知道兲朝拥有全世界规模最大的局域网，而与会的嘉宾也大多来自从来没有听说过名字的某些国家。有网友不禁感叹，对这次大会的关注实在让自己的地理知识提升了不只一个档次。</p>
<p>这次大会的主旨从一开始就是非常鲜明的：互联网主权。“互联网主权”并不是一个新鲜词汇，早在2010年官方就曾经发表白皮书，强调互联网主权的概念，并把“互联网主权”纳入“国家主权”的范畴。此后，官方媒体又不断对此概念进行多次强化宣传。其实，去年召开的第一届世界互联网大会的目的，也是希望与会各方能够在“互联网主权”问题上达成一致，只不过最后并未能成功。</p>
<p>提到“互联网主权”这个概念，就不得不说中国互联网的现状。中国拥有全世界规模最大的网民团体，也有着全世界规模最大的市场；同时却也有着全世界规模最大的网络防火墙和审查系统（以及无处不在的自我审查）。虽然如此，官方却常以巨大的网民数量、网站数量等标榜中国的互联网是开放的、自由的、有序的。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/72213-b93846f7b4109fb3.jpg" alt=""></p>
<p>在一个信息自由流通的年代，中国一批攻城狮响应号召，在至今还未被病魔战胜的方校长的带领下，建立起了全世界独一无二的超大规模的网络防火墙，并成功将这一项领先全宇宙的技术推广至伊朗、赞比亚等国。这一防火墙可以阻挡网民自由访问互联网，将官方不喜欢的消息过滤掉。诸如Google、Facebook、Twitter、Wikipedia等世界知名网站在国内都无法正常访问。</p>
<p>网络防火墙的存在，将国内互联网与国际互联网隔绝，形成了国内有别于世界其他国家的互联网形态。任何一个全世界人民共享的优秀互联网产品，你总能在中国找到替代（山寨）品。这些替代品在这堵墙的保护下，免于与国际厂商竞争，靠着中国庞大的互联网市场，形成了以BAT为代表的一系列互联网流氓巨头。这些巨头在不同领域统治着中国的互联网界，搜索归百度，电商归阿里，社交归腾讯，安全归360。国内网民很少能够逃离这四家的魔爪。</p>
<p>这堵墙是这几家巨头的财富保障，至少能够让他们在中国市场免于与国际巨头进行厮杀，专注于国内市场的竞争。考虑到此，也不难奇怪这几家厂商对于这堵墙的感情，也不奇怪马云在闭幕式上所说：这个国家管出了七亿互联网用户，管出了BAT，管出了无数的创新，还是有很多东西值得我们学习和反思的。在网络上，也有无数人以此为这堵墙洗地，认为它对于保护中国的互联网民族企业起到了莫大的作用。</p>
<p>可是，你们忘记了这堵墙的初衷么？这些互联网企业的崛起，不过是意料之外（或者意料之中）的副产品而已。它最初的目的是为了阻碍信息的自由流通，便于控制信息的传播。虽然中国的互联网企业一个个崛起，可是普罗大众最基本的权利却被忽视了：自由地使用互联网。这些靠着中国网民（被迫）牺牲自己权利而发展壮大起来的企业，并没有任何一家为他们奔走疾呼。</p>
<p>虽说这堵墙造就了这些巨头，不过也在一定程度上吞噬着他们。因为缺乏与国际厂商的竞争，国内互联网企业在很多方面落后于国际大厂，而国内市场肆无忌惮的恶意竞争也让各家的产品越发流氓。HTTPS未能大规模普及、Flash至今依然活跃、XCodeGhost风波等一系列问题都可以说是这种封闭带来的恶果。至于各家如何流氓我在以往的文章中已经提到过了，在此不再赘述。</p>
<p>封闭还让兲朝互联网充斥着各种垃圾信息。有过科研经历的人都可以理解Google与英文对科研人员的重要性，而整个中文互联网就像一片没有知识的荒野，连号称“高质量中文社区”的知乎也被垃圾信息吞噬。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/72213-71d7f627d4ee694b.png" alt=""></p>
<p>说完了防火墙，就该说一说审查这个事了。在兲朝，审查并不是互联网独有的，一切和思想表达相关的东西，诸如：书籍、影视、歌曲等，都受到相关部门的审查。但是，互联网作为一个实时性超强、互动性超强、受众超广的平台，对其审查有着异于其他作品的力度。就在几年前，天津市强力打造的金融中心，却阴差阳错了成为了中国互联网审查中心，各互联网企业的审查部门都聚居于此。</p>
<p>其实审查这个事情在各国都是普遍存在的，只是这这里情况更为特殊：因为这里的审查找不到严格的法律依旧，全屏一纸文件，甚至一个电话。因此，很多时候根本无法判断某些信息是否触及了审查底线。当不小心触及了审查底线的时候，随之而来的就是诸如河蟹、喝茶等一系列事件。长时间的无明确标准的审查环境，导致了很多网民在网络发言的时候养成了一种自我审查的习惯：在网络发表言论的时候，先自己审查自己的言论有没有可能触及审查底线，以避免被河蟹。这也导致兲朝互联网出现了一个很奇特的现象：敏感瓷。</p>
<p>虽然审查并没有严格的标准，但是还是有一定的规律可循，比如涉及政治、色情之类的言论就很有极大可能触及审查底线。而每个网站也都为了方便审查建立了庞大的敏感瓷库，通过机器加人工过滤到含有敏感瓷的信息。基于此，很多网友为了避免自己的信息被过滤，发明了很多说法方法。比如，拆字，把“维护和谐 拒绝低俗”拆解为“纟隹扌户禾口讠皆 扌巨纟色亻氐亻谷”；比如，借代，不用说大家都知道太祖是谁，长者是谁。当然，这种混乱的审查制度也闹出了很多笑话，比如“二十四口交换机”因为“口交”二字被当作敏感瓷对待，这种例子简直不胜枚举。</p>
<p>以上所描述的中国互联网现状其实可以用两个词来描述：封闭与管制。而这正是“主权”的特征。官方一再强调“互联网主权”的概念就是想合理化中国互联网的这种状态，在信息能够自由流通的互联网上划清国界。如果互联网主权的概念一旦在国内被以立法的形式确立，那么翻墙就会变成了一种偷渡行为，而一大批靠着各种梯子混迹在国外网站的网友都成了特殊意义上的难民。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/72213-72f12d0addd5660c.jpg" alt=""></p>
<p>最近几天<del>局域网</del>互联网界最受关注的事情莫过于在乌镇召开的世界互联网大会。]]>
    </summary>
    
      <category term="gfw" scheme="http://shengruoyu.com/tags/gfw/"/>
    
      <category term="internet" scheme="http://shengruoyu.com/tags/internet/"/>
    
      <category term="wic" scheme="http://shengruoyu.com/tags/wic/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[远程桌面连接Windows Server]]></title>
    <link href="http://shengruoyu.com/2015/12/28/windows_server/"/>
    <id>http://shengruoyu.com/2015/12/28/windows_server/</id>
    <published>2015-12-27T16:57:01.220Z</published>
    <updated>2015-12-27T16:57:01.220Z</updated>
    <content type="html"><![CDATA[<p>实验室工作站Windows Server已安装完毕，通过Windows远程桌面方式访问方法如下：</p>
<p>1 打开开始菜单，搜索<strong>远程桌面连接</strong>或者<strong>Remote Desktop Connection</strong>。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20151226141323.png" alt=""></p>
<p>2 打开远程桌面连接，在计算机输入框中输入工作站ip。并点击左下角“<strong>选项</strong>”。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20151226141537.png" alt=""></p>
<p>如果需要和工作站之间进行文件传输，请打开<strong>本地资源</strong>标签，选择<strong>本地设备和资源</strong>下的<strong>详细信息</strong>按钮，勾选本地磁盘驱动器。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20151226143016.png" alt=""></p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20151226143030.png" alt=""></p>
<p>3 选择<strong>连接设置</strong>中的<strong>另存为</strong>，将远程桌面连接命名并保存至桌面。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20151226141627.png" alt=""></p>
<p>4 双击桌面上已保存的rdp，并勾选<strong>不要再次询问</strong>。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/20151226141703.png" alt=""></p>
<p>5 输入用户名（Administrator）和密码，并选择<strong>保存凭据</strong>，连接成功。</p>
<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20151226142742.png" alt=""></p>
<p><strong>请各位登陆到服务器后，新建个人账户，以后远程登陆的时候不要使用Administrator账户，使用个人账户登录！！！</strong></p>
<p>移动客户端请点击如下链接下载：</p>
<p><a href="https://itunes.apple.com/us/app/microsoft-remote-desktop/id714464092" target="_blank" rel="external">iOS</a><br><a href="https://play.google.com/store/apps/details?id=com.microsoft.rdc.android" target="_blank" rel="external">Android</a><br><a href="https://www.microsoft.com/en-us/store/apps/remote-desktop/9wzdncrfj3ps" target="_blank" rel="external">Windows Phone</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>实验室工作站Windows Server已安装完毕，通过Windows远程桌面方式访问方法如下：</p>
<p>1 打开开始菜单，搜索<strong>远程桌面连接</strong>或者<strong>Remote Desktop Connection</strong>。</]]>
    </summary>
    
      <category term="remote_desktop" scheme="http://shengruoyu.com/tags/remote-desktop/"/>
    
      <category term="windows_server" scheme="http://shengruoyu.com/tags/windows-server/"/>
    
      <category term="workstation" scheme="http://shengruoyu.com/tags/workstation/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[毛蛋]]></title>
    <link href="http://shengruoyu.com/2015/12/28/Mao_Tse-tung/"/>
    <id>http://shengruoyu.com/2015/12/28/Mao_Tse-tung/</id>
    <published>2015-12-27T16:37:39.169Z</published>
    <updated>2015-12-27T16:37:39.169Z</updated>
    <content type="html"><![CDATA[<p><img src="https://upload.wikimedia.org/wikipedia/zh/7/78/100-2005-b.jpg" alt=""></p>
<p>26日是中国最有争议的一个人的诞辰日，有人说他是人民领袖大救星，有人说他是独裁恶魔。他建立了一个国家，又亲手毁掉了这个国家。虽然他已经去世40年，但是对他的争论至今未停休，而他给这片国土留下的痕迹至今也未能抹去。</p>
<p>官方在他死后，为了避免争议，对他个人以“三分功，七分过”做了定性，可是这并没有消除民间的质疑声。</p>
<p>他的崇拜者把他奉若神明，认为他完美无缺，认为现在社会上的种种问题都是没有坚持贯彻当年他一手制定的路线。他们认为解决中国所有问题的途径只有一条：那就是重回当年的道路。他们甚至认为如今的官方是对当年此人路线的背叛，已经丧失了执政的能力。这么一群人在网络上被称为“毛左”，他们是坚定的激进的毛路线的支持者。在他们的思想中，不存在理性与逻辑，唯一正确的只有毛思想与毛语录。他们是当年极权体制下个人崇拜教育的成果和牺牲品。当这颗他们眼中的红太阳陨落之后，他们的政治梦想也随之破灭，只能把对现实的种种不满转为对当年体制的怀念。这是一群固步自封的人，终究会被扫进历史的垃圾堆。</p>
<p>另一部分人，认为他是一个独裁者，是一个恶魔，对国家前三十年的失败要负主要责任。建国后，他发动了公有化运动，消灭了中国的资产阶级，让一大批有望成为百年品牌的企业纷纷倒掉；他发动大跃进，造成了大饥荒，饿死人数至今尚无定论，据说有千万人之多；他发动文革，十年浩劫让整个国家丧志了秩序、伦理、法制，而那群“毛左”最怀念的正是这十年的混乱时期。他独断专行，靠各种手段打击政治对手；他利用“阳谋”引蛇出洞，55万名知识分子和爱国青年被打为右派，让国家的精英一代饱受摧残。因为种种行为，他称为和希特勒、斯大林齐名的二十世纪三大暴君。</p>
<p>虽然他已经去世了40年，但是关于他以及他生前很多问题的讨论仍旧是禁区。央视王牌主持之一的毕福剑就曾经因为在酒桌上调侃他而被央视解雇，至今未能成功复出。当然，这种禁区并不只是针对体制内的人，对于体制外的人同样存在禁区。不论这个人真实形象如何，他毕竟是建国后的第一代领导核心，也是这个政府执政合法性的来源之一，因此无论怎么样是不可能对他进行全盘否定的。因此，对于他的讨论，尤其对灾难性事件，比如“朝鲜战争”、“大跃进”、“文革”、“反右扩大化”、“三年困难时期”等的讨论都是无法公开进行的。</p>
<p>作为一个领袖，他的形象是不能有瑕疵的，这是世界上所有领袖的共有特质，他肯定不会例外。我们接受的和他有关的事实，也是随着政治环境的变动和政治需要而不断改变。而每一个事件背后，终究会有人出来为他背锅。比如，“三年困难时期”在以往一直被描述为“三年自然灾害”，“自然灾害”很巧妙地忽略了灾难中的人为因素，毕竟人力不胜天。但是随着更多的资料被挖掘，越来越多的人相信那三年并没有大规模的自然灾害发生，因此后来那三年就被称为了“三年困难时期”。“文革”的爆发与进展也一直被认为是四人帮，尤其是江青的责任，而他只是一个受到了奸佞小人蛊惑的无辜领袖。虽然关于“文革”的讨论在国内并不能公开进行，但是还是有越来越多的关于“文革”的资料表明了这些浩劫的真实面貌。</p>
<p>然而他的存在也不只是他个人的原因，他的存在得益于这片土地上所有人的努力。国人经历了上千年帝制社会，对于明君的渴望可谓至极。人们总是想有一位英明神武的君主带领大家致富奔小康，却从来不敢想象没有皇帝的日子是何样。这种向往强人政治的心态至今依然存在于大多数人心中，即使无数的人已经被这种政治生态坑的体无完肤。不知道这片土地上到底有多少人设想过没有皇帝会怎么样？自己的事情自己做主又会怎样？</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="https://upload.wikimedia.org/wikipedia/zh/7/78/100-2005-b.jpg" alt=""></p>
<p>26日是中国最有争议的一个人的诞辰日，有人说他是人民领袖大救星，有人说他是独裁恶魔。他建立了一个国]]>
    </summary>
    
      <category term="CPC" scheme="http://shengruoyu.com/tags/CPC/"/>
    
      <category term="Mao Tse-tung" scheme="http://shengruoyu.com/tags/Mao-Tse-tung/"/>
    
      <category term="PRC" scheme="http://shengruoyu.com/tags/PRC/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用Github和Hexo搭建个人博客]]></title>
    <link href="http://shengruoyu.com/2015/12/25/hexo_blog/"/>
    <id>http://shengruoyu.com/2015/12/25/hexo_blog/</id>
    <published>2015-12-25T07:26:31.849Z</published>
    <updated>2015-12-25T07:26:31.849Z</updated>
    <content type="html"><![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/github%2Bhexo.jpg" alt=""></p>
<h3 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h3><p>以下内容仅适用于Windows平台。</p>
<p>以往大家搭建客人博客的时候，首选的都是Wordpress平台。但随着Wordpress平台越来越臃肿，轻便、简洁的博客平台成了众多网友的新选择，而Hexo正是其中之一。Hexo可以借助Github提供的免费GithubPage，助您方便地搭建轻量级的个人博客平台。</p>
<ul>
<li><strong>注册Github账号并创建GithubPage</strong></li>
<li><strong>安装Node.js和Github客户端</strong></li>
<li><strong>安装Hexo并初始化</strong></li>
<li><strong>配置Hexo并部署至GithubPage</strong></li>
</ul>
<hr>
<h3 id="u6CE8_u518CGithub_u8D26_u53F7_u5E76_u521B_u5EFAGithubPage"><a href="#u6CE8_u518CGithub_u8D26_u53F7_u5E76_u521B_u5EFAGithubPage" class="headerlink" title="注册Github账号并创建GithubPage"></a>注册Github账号并创建GithubPage</h3><p><img src="http://78rbxs.com1.z0.glb.clouddn.com/github-mark.png" alt=""></p>
<ol>
<li>前往 <a href="https://github.com" target="_blank" rel="external">Github</a> 创建账号，如<code>githubid</code>，并登陆。</li>
<li>新建<strong>Repository</strong> ，Repository名字取为<code>githubid.github.io</code>，注意此处名字必须与注册的id一一对应！</li>
<li>首次创建可能需要等待审核，审核通过后GithubPage即创建成功，可以尝试访问<code>githubid.github.io</code>。</li>
</ol>
<hr>
<h3 id="u5B89_u88C5Node-js_u548CGithub_u5BA2_u6237_u7AEF"><a href="#u5B89_u88C5Node-js_u548CGithub_u5BA2_u6237_u7AEF" class="headerlink" title="安装Node.js和Github客户端"></a>安装Node.js和Github客户端</h3><p><img src="http://78rbxs.com1.z0.glb.clouddn.com/nodejs-green.png" alt=""></p>
<ol>
<li>前往<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a> 根据自己操作系统下载Node.js安装包，笔者选择的是v4.2.4 LTS x64。下载完后进行安装。</li>
<li>检查系统环境变量path下是否有npm路径，如没有请手动添加。<img src="http://78rbxs.com1.z0.glb.clouddn.com/Capture.PNG" alt=""></li>
<li>下载<a href="https://desktop.github.com/" target="_blank" rel="external">Github Windows客户端</a>，安装并登录。</li>
<li>配置Github默认Clone路径，此处可以根据个人喜好随意选取。</li>
</ol>
<hr>
<h3 id="u5B89_u88C5Hexo_u5E76_u521D_u59CB_u5316"><a href="#u5B89_u88C5Hexo_u5E76_u521D_u59CB_u5316" class="headerlink" title="安装Hexo并初始化"></a>安装Hexo并初始化</h3><p>打开Github Shell，输入npm命令，安装Hexo。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> hexo-cli -<span class="keyword">g</span></span><br><span class="line">npm <span class="keyword">install</span> hexo <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure>
<p>根据个人喜欢，在任意位置建立Hexo文件夹（比如：D: \Github\Hexo，并在Github shell内切换至此文件夹。）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt; <span class="comment">#初始化Hexo文件夹</span></span><br><span class="line"><span class="built_in">cd</span> Hexo <span class="comment">#进入Hexo文件夹</span></span><br><span class="line">npm install <span class="comment">#安装Hexo</span></span><br></pre></td></tr></table></figure>
<p>安装Hexo插件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> hexo-generator-<span class="keyword">index</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-<span class="keyword">archive</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-<span class="keyword">category</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-tag <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-heroku <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-rsync <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-openshift <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-renderer-marked@<span class="number">0.2</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-renderer-stylus@<span class="number">0.2</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-feed@<span class="number">1</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-sitemap@<span class="number">1</span> <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="u914D_u7F6EHexo_u5E76_u90E8_u7F72_u81F3GithubPage"><a href="#u914D_u7F6EHexo_u5E76_u90E8_u7F72_u81F3GithubPage" class="headerlink" title="配置Hexo并部署至GithubPage"></a>配置Hexo并部署至GithubPage</h3><p>Hexo的配置都保存在其根目录下的_config.yml文件中。我们可以打开对其进行配置。</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># Hexo Configuration</span></span><br><span class="line"><span class="preprocessor">## Docs: http://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="preprocessor">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Site #网站设置，按照个人喜好填写</span></span><br><span class="line"><span class="label">title:</span>  <span class="preprocessor">#网站标题</span></span><br><span class="line"><span class="label">subtitle:</span> <span class="preprocessor">#网站副标题</span></span><br><span class="line"><span class="label">description:</span> <span class="preprocessor">#网站描述</span></span><br><span class="line"><span class="label">author:</span> <span class="preprocessor">#作者</span></span><br><span class="line"><span class="label">language:</span> <span class="preprocessor">#语言，支持zh-CN</span></span><br><span class="line"><span class="label">timezone:</span> <span class="preprocessor">#时区</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># URL</span></span><br><span class="line"><span class="preprocessor">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="label">url:</span> http://githubid.github.io  <span class="preprocessor">#此处请填入github page的域名</span></span><br><span class="line"><span class="label">root:</span> /</span><br><span class="line"><span class="label">permalink:</span> :year/:month/:day/:title/</span><br><span class="line"><span class="label">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Extensions </span></span><br><span class="line"><span class="preprocessor">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="preprocessor">## Themes: http://hexo.io/themes/</span></span><br><span class="line"><span class="label">theme:</span> maupassant <span class="preprocessor">#此处可以更改Hexo主题</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Deployment #此处请填入你的github账号信息</span></span><br><span class="line"><span class="preprocessor">## Docs: http://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="label">deploy:</span></span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:githubid/githubid.github.io.git <span class="preprocessor">#github page的git地址</span></span><br><span class="line">  branch: master <span class="preprocessor">#git分支</span></span><br></pre></td></tr></table></figure>
<p>所有配置都编辑并保存好之后，在Github Shell中Hexo目录运行如下代码：</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> g <span class="comment">#生成本地静态网页文件</span></span><br><span class="line">hexo s <span class="comment">#打开Hexo本地服务器，用于预览</span></span><br></pre></td></tr></table></figure>
<p>此时，可以打开<a href="127.0.0.1:4000" target="_blank" rel="external">127.0.0.1:4000</a> 进行预览，如预览效果满意，则将Hexo部署至Github。</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> deploy <span class="comment">#将网页部署至GithubPage</span></span><br></pre></td></tr></table></figure>
<p>新建文章并发表至Blog</p>
<p>Hexo可以使用如下命令新建文章：</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> n <span class="comment">#新建文章</span></span><br></pre></td></tr></table></figure>
<p>但是，这种方式对于Windows平台并不友好。其实，Hexo的文章都保存在\source_posts目录下，作者可以通过在此目录下新建filename.md文件的方式新建文章。</p>
<p>新建文章编写并保存好之后，重新生成本地静态网页并发表至博客，其步骤和上面所述部署Hexo至GithubPage一样：</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> g <span class="comment">#生成本地静态网页文件</span></span><br><span class="line">hexo s <span class="comment">#预览</span></span><br><span class="line">hexo daploy <span class="comment">#将文章发表</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://78rbxs.com1.z0.glb.clouddn.com/github%2Bhexo.jpg" alt=""></p>
<h3 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerl]]>
    </summary>
    
      <category term="Blogger" scheme="http://shengruoyu.com/tags/Blogger/"/>
    
      <category term="Github" scheme="http://shengruoyu.com/tags/Github/"/>
    
      <category term="Hexo" scheme="http://shengruoyu.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello]]></title>
    <link href="http://shengruoyu.com/2015/12/22/first/"/>
    <id>http://shengruoyu.com/2015/12/22/first/</id>
    <published>2015-12-22T12:58:44.885Z</published>
    <updated>2015-12-22T12:58:44.885Z</updated>
    <content type="html"><![CDATA[<p>这是我使用 <strong> markdown</strong> 语法书写的第一篇博客，其实我也不知道拿这个博客用来做甚，只是觉着比较好玩就建起来了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这是我使用 <strong> markdown</strong> 语法书写的第一篇博客，其实我也不知道拿这个博客用来做甚，只是觉着比较好玩就建起来了。</p>
]]>
    </summary>
    
      <category term="github" scheme="http://shengruoyu.com/tags/github/"/>
    
      <category term="hexo" scheme="http://shengruoyu.com/tags/hexo/"/>
    
      <category term="markdown" scheme="http://shengruoyu.com/tags/markdown/"/>
    
  </entry>
  
</feed>
